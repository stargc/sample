<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ehl.tsq.data.infrastructure.persistence.mapper.ZHCGTrashMapper" >
  <resultMap id="BaseResultMap" type="com.ehl.tsq.data.infrastructure.persistence.po.ZHCGTrash" >
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="trash_id" property="trashId" jdbcType="INTEGER" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="number" property="number" jdbcType="VARCHAR" />
    <result column="street_name" property="streetName" jdbcType="VARCHAR" />
    <result column="road_name" property="roadName" jdbcType="VARCHAR" />
    <result column="street_id" property="streetId" jdbcType="INTEGER" />
    <result column="road_id" property="roadId" jdbcType="INTEGER" />
    <result column="owner" property="owner" jdbcType="VARCHAR" />
    <result column="telephone" property="telephone" jdbcType="VARCHAR" />
    <result column="longitude" property="longitude" jdbcType="DOUBLE" />
    <result column="latitude" property="latitude" jdbcType="DOUBLE" />
    <result column="sensor_id" property="sensorId" jdbcType="VARCHAR" />
    <result column="enclosure_url" property="enclosureUrl" jdbcType="VARCHAR" />
    <result column="trash_state" property="trashState" jdbcType="VARCHAR" />
    <result column="warning" property="warning" jdbcType="INTEGER" />
    <result column="warning_time" property="warningTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, trash_id, address, number, street_name, road_name, street_id, road_id, owner, 
    telephone, longitude, latitude, sensor_id, enclosure_url, trash_state, warning, warning_time, 
    create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ehl.tsq.data.infrastructure.persistence.po.ZHCGTrashExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_dws_zhcg_trash
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.ehl.tsq.data.infrastructure.persistence.po.ZHCGTrashExample" >
    delete from t_dws_zhcg_trash
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.ehl.tsq.data.infrastructure.persistence.po.ZHCGTrash" >
    insert into t_dws_zhcg_trash (id, trash_id, address, 
      number, street_name, road_name, 
      street_id, road_id, owner, 
      telephone, longitude, latitude, 
      sensor_id, enclosure_url, trash_state, 
      warning, warning_time, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{trashId,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, 
      #{number,jdbcType=VARCHAR}, #{streetName,jdbcType=VARCHAR}, #{roadName,jdbcType=VARCHAR}, 
      #{streetId,jdbcType=INTEGER}, #{roadId,jdbcType=INTEGER}, #{owner,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{longitude,jdbcType=DOUBLE}, #{latitude,jdbcType=DOUBLE}, 
      #{sensorId,jdbcType=VARCHAR}, #{enclosureUrl,jdbcType=VARCHAR}, #{trashState,jdbcType=VARCHAR}, 
      #{warning,jdbcType=INTEGER}, #{warningTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.ehl.tsq.data.infrastructure.persistence.po.ZHCGTrash" >
    insert into t_dws_zhcg_trash
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="trashId != null" >
        trash_id,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="streetName != null" >
        street_name,
      </if>
      <if test="roadName != null" >
        road_name,
      </if>
      <if test="streetId != null" >
        street_id,
      </if>
      <if test="roadId != null" >
        road_id,
      </if>
      <if test="owner != null" >
        owner,
      </if>
      <if test="telephone != null" >
        telephone,
      </if>
      <if test="longitude != null" >
        longitude,
      </if>
      <if test="latitude != null" >
        latitude,
      </if>
      <if test="sensorId != null" >
        sensor_id,
      </if>
      <if test="enclosureUrl != null" >
        enclosure_url,
      </if>
      <if test="trashState != null" >
        trash_state,
      </if>
      <if test="warning != null" >
        warning,
      </if>
      <if test="warningTime != null" >
        warning_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="trashId != null" >
        #{trashId,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="streetName != null" >
        #{streetName,jdbcType=VARCHAR},
      </if>
      <if test="roadName != null" >
        #{roadName,jdbcType=VARCHAR},
      </if>
      <if test="streetId != null" >
        #{streetId,jdbcType=INTEGER},
      </if>
      <if test="roadId != null" >
        #{roadId,jdbcType=INTEGER},
      </if>
      <if test="owner != null" >
        #{owner,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null" >
        #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="latitude != null" >
        #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="sensorId != null" >
        #{sensorId,jdbcType=VARCHAR},
      </if>
      <if test="enclosureUrl != null" >
        #{enclosureUrl,jdbcType=VARCHAR},
      </if>
      <if test="trashState != null" >
        #{trashState,jdbcType=VARCHAR},
      </if>
      <if test="warning != null" >
        #{warning,jdbcType=INTEGER},
      </if>
      <if test="warningTime != null" >
        #{warningTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ehl.tsq.data.infrastructure.persistence.po.ZHCGTrashExample" resultType="java.lang.Integer" >
    select count(*) from t_dws_zhcg_trash
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_dws_zhcg_trash
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.trashId != null" >
        trash_id = #{record.trashId,jdbcType=INTEGER},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.number != null" >
        number = #{record.number,jdbcType=VARCHAR},
      </if>
      <if test="record.streetName != null" >
        street_name = #{record.streetName,jdbcType=VARCHAR},
      </if>
      <if test="record.roadName != null" >
        road_name = #{record.roadName,jdbcType=VARCHAR},
      </if>
      <if test="record.streetId != null" >
        street_id = #{record.streetId,jdbcType=INTEGER},
      </if>
      <if test="record.roadId != null" >
        road_id = #{record.roadId,jdbcType=INTEGER},
      </if>
      <if test="record.owner != null" >
        owner = #{record.owner,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null" >
        telephone = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.longitude != null" >
        longitude = #{record.longitude,jdbcType=DOUBLE},
      </if>
      <if test="record.latitude != null" >
        latitude = #{record.latitude,jdbcType=DOUBLE},
      </if>
      <if test="record.sensorId != null" >
        sensor_id = #{record.sensorId,jdbcType=VARCHAR},
      </if>
      <if test="record.enclosureUrl != null" >
        enclosure_url = #{record.enclosureUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.trashState != null" >
        trash_state = #{record.trashState,jdbcType=VARCHAR},
      </if>
      <if test="record.warning != null" >
        warning = #{record.warning,jdbcType=INTEGER},
      </if>
      <if test="record.warningTime != null" >
        warning_time = #{record.warningTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_dws_zhcg_trash
    set id = #{record.id,jdbcType=INTEGER},
      trash_id = #{record.trashId,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR},
      number = #{record.number,jdbcType=VARCHAR},
      street_name = #{record.streetName,jdbcType=VARCHAR},
      road_name = #{record.roadName,jdbcType=VARCHAR},
      street_id = #{record.streetId,jdbcType=INTEGER},
      road_id = #{record.roadId,jdbcType=INTEGER},
      owner = #{record.owner,jdbcType=VARCHAR},
      telephone = #{record.telephone,jdbcType=VARCHAR},
      longitude = #{record.longitude,jdbcType=DOUBLE},
      latitude = #{record.latitude,jdbcType=DOUBLE},
      sensor_id = #{record.sensorId,jdbcType=VARCHAR},
      enclosure_url = #{record.enclosureUrl,jdbcType=VARCHAR},
      trash_state = #{record.trashState,jdbcType=VARCHAR},
      warning = #{record.warning,jdbcType=INTEGER},
      warning_time = #{record.warningTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>