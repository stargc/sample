// Generated by the protocol buffer compiler.  DO NOT EDIT!

package dg.model.nano;

@SuppressWarnings("hiding")
public interface MatrixCommon {

  // enum CutboardDirection
  public static final int CUTBOARD_DIRECTION_UNKNOWN = 0;
  public static final int CUTBOARD_DIRECTION_UPWARD = 1;
  public static final int CUTBOARD_DIRECTION_DOWN = 2;
  public static final int CUTBOARD_DIRECTION_LEFT = 3;
  public static final int CUTBOARD_DIRECTION_RIGHT = 4;
  public static final int CUTBOARD_DIRECTION_LEFT_UPWARD = 5;
  public static final int CUTBOARD_DIRECTION_LEFT_DOWN = 6;
  public static final int CUTBOARD_DIRECTION_RIGHT_UPWARD = 7;
  public static final int CUTBOARD_DIRECTION_RIGHT_DOWN = 8;

  // enum CutboardSpeed
  public static final int CUTBOARD_SPEED_UNKNOWN = 0;
  public static final int CUTBOARD_SPEED_HIGH = 1;
  public static final int CUTBOARD_SPEED_NORMAL = 2;
  public static final int CUTBOARD_SPEED_SLOW = 3;

  // enum ObjType
  public static final int OBJ_TYPE_UNKNOWN = 0;
  public static final int OBJ_TYPE_CAR = 1;
  public static final int OBJ_TYPE_BICYCLE = 2;
  public static final int OBJ_TYPE_TRICYCLE = 3;
  public static final int OBJ_TYPE_PEDESTRIAN = 4;
  public static final int OBJ_TYPE_FACE = 1024;
  public static final int OBJ_TYPE_VEHICLE_VECTOR = 2048;
  public static final int OBJ_TYPE_BICYCLE_VECTOR = 2049;
  public static final int OBJ_TYPE_TRICYCLE_VECTOR = 2050;
  public static final int OBJ_TYPE_PEDESTRIAN_VECTOR = 2051;
  public static final int OBJ_TYPE_FACE_VECTOR = 3072;
  public static final int OBJ_TYPE_VEHICLE_CUTBOARD = 4096;
  public static final int OBJ_TYPE_BICYCLE_CUTBOARD = 4097;
  public static final int OBJ_TYPE_TRICYCLE_CUTBOARD = 4098;
  public static final int OBJ_TYPE_PEDESTRIAN_CUTBOARD = 4099;
  public static final int OBJ_TYPE_FACE_CUTBOARD = 5120;
  public static final int OBJ_TYPE_ALL = 5555;
  public static final int OBJ_TYPE_ALL_Matched = 5556;

  // enum DataFmtType
  public static final int UNKNOWNFMT = 0;
  public static final int JSON = 1;
  public static final int PROTOBUF = 2;
  public static final int CSV = 3;
  public static final int PDF = 4;

  // enum ThreeStatus
  public static final int THREE_STATUS_FALSE = 0;
  public static final int THREE_STATUS_TRUE = 1;
  public static final int THREE_STATUS_UNKNOWN = -1;

  // enum ValueType
  public static final int ValueType_Unknown = 0;
  public static final int ValueType_String = 1;
  public static final int ValueType_Int = 2;
  public static final int ValueType_Float = 3;
  public static final int ValueType_Bool = 4;

  // enum EventType
  public static final int Event_UNKNOWN = 0;
  public static final int Event_CROSSLINE = 1;
  public static final int Event_GETINAREA = 2;
  public static final int Event_GETOUTAREA = 3;

  // enum DBType
  public static final int KAFKA = 0;
  public static final int POSTGRES = 1;
  public static final int FILEIMAGE = 2;

  public static final class SrcMetadata extends
      com.google.protobuf.nano.MessageNano {

    private static volatile SrcMetadata[] _emptyArray;
    public static SrcMetadata[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new SrcMetadata[0];
          }
        }
      }
      return _emptyArray;
    }

    // int64 Timestamp = 1;
    public long timestamp;

    // int32 Duration = 2;
    public int duration;

    // int32 SensorId = 3;
    public int sensorId;

    // string SensorName = 4;
    public java.lang.String sensorName;

    // string SensorUrl = 5;
    public java.lang.String sensorUrl;

    // int32 RepoId = 6;
    public int repoId;

    // string RepoInfo = 7;
    public java.lang.String repoInfo;

    // .dg.model.ObjType ObjType = 8;
    public int objType;

    // string SensorIdStr = 9;
    public java.lang.String sensorIdStr;

    // string UniqueSensorId = 10;
    public java.lang.String uniqueSensorId;

    // map<string, string> AdditionalInfos = 11;
    public java.util.Map<java.lang.String, java.lang.String> additionalInfos;

    // string InnerTaskId = 110;
    public java.lang.String innerTaskId;

    public SrcMetadata() {
      clear();
    }

    public SrcMetadata clear() {
      timestamp = 0L;
      duration = 0;
      sensorId = 0;
      sensorName = "";
      sensorUrl = "";
      repoId = 0;
      repoInfo = "";
      objType = dg.model.nano.MatrixCommon.OBJ_TYPE_UNKNOWN;
      sensorIdStr = "";
      uniqueSensorId = "";
      additionalInfos = null;
      innerTaskId = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.timestamp != 0L) {
        output.writeInt64(1, this.timestamp);
      }
      if (this.duration != 0) {
        output.writeInt32(2, this.duration);
      }
      if (this.sensorId != 0) {
        output.writeInt32(3, this.sensorId);
      }
      if (!this.sensorName.equals("")) {
        output.writeString(4, this.sensorName);
      }
      if (!this.sensorUrl.equals("")) {
        output.writeString(5, this.sensorUrl);
      }
      if (this.repoId != 0) {
        output.writeInt32(6, this.repoId);
      }
      if (!this.repoInfo.equals("")) {
        output.writeString(7, this.repoInfo);
      }
      if (this.objType != dg.model.nano.MatrixCommon.OBJ_TYPE_UNKNOWN) {
        output.writeInt32(8, this.objType);
      }
      if (!this.sensorIdStr.equals("")) {
        output.writeString(9, this.sensorIdStr);
      }
      if (!this.uniqueSensorId.equals("")) {
        output.writeString(10, this.uniqueSensorId);
      }
      if (this.additionalInfos != null) {
        com.google.protobuf.nano.InternalNano.serializeMapField(
          output, this.additionalInfos, 11,
        com.google.protobuf.nano.InternalNano.TYPE_STRING,
        com.google.protobuf.nano.InternalNano.TYPE_STRING);
      }
      if (!this.innerTaskId.equals("")) {
        output.writeString(110, this.innerTaskId);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.timestamp != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(1, this.timestamp);
      }
      if (this.duration != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(2, this.duration);
      }
      if (this.sensorId != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(3, this.sensorId);
      }
      if (!this.sensorName.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.sensorName);
      }
      if (!this.sensorUrl.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.sensorUrl);
      }
      if (this.repoId != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(6, this.repoId);
      }
      if (!this.repoInfo.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(7, this.repoInfo);
      }
      if (this.objType != dg.model.nano.MatrixCommon.OBJ_TYPE_UNKNOWN) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(8, this.objType);
      }
      if (!this.sensorIdStr.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(9, this.sensorIdStr);
      }
      if (!this.uniqueSensorId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(10, this.uniqueSensorId);
      }
      if (this.additionalInfos != null) {
        size += com.google.protobuf.nano.InternalNano.computeMapFieldSize(
          this.additionalInfos, 11,
        com.google.protobuf.nano.InternalNano.TYPE_STRING,
        com.google.protobuf.nano.InternalNano.TYPE_STRING);
      }
      if (!this.innerTaskId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(110, this.innerTaskId);
      }
      return size;
    }

    @Override
    public SrcMetadata mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      com.google.protobuf.nano.MapFactories.MapFactory mapFactory =
        com.google.protobuf.nano.MapFactories.getMapFactory();
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.timestamp = input.readInt64();
            break;
          }
          case 16: {
            this.duration = input.readInt32();
            break;
          }
          case 24: {
            this.sensorId = input.readInt32();
            break;
          }
          case 34: {
            this.sensorName = input.readString();
            break;
          }
          case 42: {
            this.sensorUrl = input.readString();
            break;
          }
          case 48: {
            this.repoId = input.readInt32();
            break;
          }
          case 58: {
            this.repoInfo = input.readString();
            break;
          }
          case 64: {
            int value = input.readInt32();
            switch (value) {
              case dg.model.nano.MatrixCommon.OBJ_TYPE_UNKNOWN:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_CAR:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_BICYCLE:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_TRICYCLE:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_PEDESTRIAN:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_FACE:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_VEHICLE_VECTOR:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_BICYCLE_VECTOR:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_TRICYCLE_VECTOR:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_PEDESTRIAN_VECTOR:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_FACE_VECTOR:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_VEHICLE_CUTBOARD:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_BICYCLE_CUTBOARD:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_TRICYCLE_CUTBOARD:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_PEDESTRIAN_CUTBOARD:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_FACE_CUTBOARD:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_ALL:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_ALL_Matched:
                this.objType = value;
                break;
            }
            break;
          }
          case 74: {
            this.sensorIdStr = input.readString();
            break;
          }
          case 82: {
            this.uniqueSensorId = input.readString();
            break;
          }
          case 90: {
            this.additionalInfos = com.google.protobuf.nano.InternalNano.mergeMapEntry(
              input, this.additionalInfos, mapFactory,
              com.google.protobuf.nano.InternalNano.TYPE_STRING,
              com.google.protobuf.nano.InternalNano.TYPE_STRING,
              null,
              10, 18);

            break;
          }
          case 882: {
            this.innerTaskId = input.readString();
            break;
          }
        }
      }
    }

    public static SrcMetadata parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new SrcMetadata(), data);
    }

    public static SrcMetadata parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new SrcMetadata().mergeFrom(input);
    }
  }

  public static final class PingRequest extends
      com.google.protobuf.nano.MessageNano {

    private static volatile PingRequest[] _emptyArray;
    public static PingRequest[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new PingRequest[0];
          }
        }
      }
      return _emptyArray;
    }

    public PingRequest() {
      clear();
    }

    public PingRequest clear() {
      cachedSize = -1;
      return this;
    }

    @Override
    public PingRequest mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
        }
      }
    }

    public static PingRequest parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new PingRequest(), data);
    }

    public static PingRequest parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new PingRequest().mergeFrom(input);
    }
  }

  public static final class PingResponse extends
      com.google.protobuf.nano.MessageNano {

    private static volatile PingResponse[] _emptyArray;
    public static PingResponse[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new PingResponse[0];
          }
        }
      }
      return _emptyArray;
    }

    // string Message = 1;
    public java.lang.String message;

    public PingResponse() {
      clear();
    }

    public PingResponse clear() {
      message = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.message.equals("")) {
        output.writeString(1, this.message);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.message.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.message);
      }
      return size;
    }

    @Override
    public PingResponse mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.message = input.readString();
            break;
          }
        }
      }
    }

    public static PingResponse parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new PingResponse(), data);
    }

    public static PingResponse parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new PingResponse().mergeFrom(input);
    }
  }

  public static final class Cutboard extends
      com.google.protobuf.nano.MessageNano {

    private static volatile Cutboard[] _emptyArray;
    public static Cutboard[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Cutboard[0];
          }
        }
      }
      return _emptyArray;
    }

    // int32 X = 1;
    public int x;

    // int32 Y = 2;
    public int y;

    // int32 Width = 3;
    public int width;

    // int32 Height = 4;
    public int height;

    // int32 ResWidth = 5;
    public int resWidth;

    // int32 ResHeight = 6;
    public int resHeight;

    // float Confidence = 7;
    public float confidence;

    public Cutboard() {
      clear();
    }

    public Cutboard clear() {
      x = 0;
      y = 0;
      width = 0;
      height = 0;
      resWidth = 0;
      resHeight = 0;
      confidence = 0F;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.x != 0) {
        output.writeInt32(1, this.x);
      }
      if (this.y != 0) {
        output.writeInt32(2, this.y);
      }
      if (this.width != 0) {
        output.writeInt32(3, this.width);
      }
      if (this.height != 0) {
        output.writeInt32(4, this.height);
      }
      if (this.resWidth != 0) {
        output.writeInt32(5, this.resWidth);
      }
      if (this.resHeight != 0) {
        output.writeInt32(6, this.resHeight);
      }
      if (java.lang.Float.floatToIntBits(this.confidence)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(7, this.confidence);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.x != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.x);
      }
      if (this.y != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(2, this.y);
      }
      if (this.width != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(3, this.width);
      }
      if (this.height != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(4, this.height);
      }
      if (this.resWidth != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(5, this.resWidth);
      }
      if (this.resHeight != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(6, this.resHeight);
      }
      if (java.lang.Float.floatToIntBits(this.confidence)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(7, this.confidence);
      }
      return size;
    }

    @Override
    public Cutboard mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.x = input.readInt32();
            break;
          }
          case 16: {
            this.y = input.readInt32();
            break;
          }
          case 24: {
            this.width = input.readInt32();
            break;
          }
          case 32: {
            this.height = input.readInt32();
            break;
          }
          case 40: {
            this.resWidth = input.readInt32();
            break;
          }
          case 48: {
            this.resHeight = input.readInt32();
            break;
          }
          case 61: {
            this.confidence = input.readFloat();
            break;
          }
        }
      }
    }

    public static Cutboard parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Cutboard(), data);
    }

    public static Cutboard parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Cutboard().mergeFrom(input);
    }
  }

  public static final class PointF extends
      com.google.protobuf.nano.MessageNano {

    private static volatile PointF[] _emptyArray;
    public static PointF[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new PointF[0];
          }
        }
      }
      return _emptyArray;
    }

    // float X = 1;
    public float x;

    // float Y = 2;
    public float y;

    public PointF() {
      clear();
    }

    public PointF clear() {
      x = 0F;
      y = 0F;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (java.lang.Float.floatToIntBits(this.x)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(1, this.x);
      }
      if (java.lang.Float.floatToIntBits(this.y)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(2, this.y);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (java.lang.Float.floatToIntBits(this.x)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(1, this.x);
      }
      if (java.lang.Float.floatToIntBits(this.y)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(2, this.y);
      }
      return size;
    }

    @Override
    public PointF mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 13: {
            this.x = input.readFloat();
            break;
          }
          case 21: {
            this.y = input.readFloat();
            break;
          }
        }
      }
    }

    public static PointF parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new PointF(), data);
    }

    public static PointF parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new PointF().mergeFrom(input);
    }
  }

  public static final class Rect extends
      com.google.protobuf.nano.MessageNano {

    private static volatile Rect[] _emptyArray;
    public static Rect[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Rect[0];
          }
        }
      }
      return _emptyArray;
    }

    // int32 X = 1;
    public int x;

    // int32 Y = 2;
    public int y;

    // int32 Width = 3;
    public int width;

    // int32 Height = 4;
    public int height;

    public Rect() {
      clear();
    }

    public Rect clear() {
      x = 0;
      y = 0;
      width = 0;
      height = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.x != 0) {
        output.writeInt32(1, this.x);
      }
      if (this.y != 0) {
        output.writeInt32(2, this.y);
      }
      if (this.width != 0) {
        output.writeInt32(3, this.width);
      }
      if (this.height != 0) {
        output.writeInt32(4, this.height);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.x != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.x);
      }
      if (this.y != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(2, this.y);
      }
      if (this.width != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(3, this.width);
      }
      if (this.height != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(4, this.height);
      }
      return size;
    }

    @Override
    public Rect mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.x = input.readInt32();
            break;
          }
          case 16: {
            this.y = input.readInt32();
            break;
          }
          case 24: {
            this.width = input.readInt32();
            break;
          }
          case 32: {
            this.height = input.readInt32();
            break;
          }
        }
      }
    }

    public static Rect parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Rect(), data);
    }

    public static Rect parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Rect().mergeFrom(input);
    }
  }

  public static final class RectF extends
      com.google.protobuf.nano.MessageNano {

    private static volatile RectF[] _emptyArray;
    public static RectF[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new RectF[0];
          }
        }
      }
      return _emptyArray;
    }

    // float X = 1;
    public float x;

    // float Y = 2;
    public float y;

    // float Width = 3;
    public float width;

    // float Height = 4;
    public float height;

    public RectF() {
      clear();
    }

    public RectF clear() {
      x = 0F;
      y = 0F;
      width = 0F;
      height = 0F;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (java.lang.Float.floatToIntBits(this.x)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(1, this.x);
      }
      if (java.lang.Float.floatToIntBits(this.y)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(2, this.y);
      }
      if (java.lang.Float.floatToIntBits(this.width)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(3, this.width);
      }
      if (java.lang.Float.floatToIntBits(this.height)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(4, this.height);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (java.lang.Float.floatToIntBits(this.x)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(1, this.x);
      }
      if (java.lang.Float.floatToIntBits(this.y)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(2, this.y);
      }
      if (java.lang.Float.floatToIntBits(this.width)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(3, this.width);
      }
      if (java.lang.Float.floatToIntBits(this.height)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(4, this.height);
      }
      return size;
    }

    @Override
    public RectF mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 13: {
            this.x = input.readFloat();
            break;
          }
          case 21: {
            this.y = input.readFloat();
            break;
          }
          case 29: {
            this.width = input.readFloat();
            break;
          }
          case 37: {
            this.height = input.readFloat();
            break;
          }
        }
      }
    }

    public static RectF parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new RectF(), data);
    }

    public static RectF parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new RectF().mergeFrom(input);
    }
  }

  public static final class RectL extends
      com.google.protobuf.nano.MessageNano {

    private static volatile RectL[] _emptyArray;
    public static RectL[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new RectL[0];
          }
        }
      }
      return _emptyArray;
    }

    // int32 x = 1;
    public int x;

    // int32 y = 2;
    public int y;

    // int32 w = 3;
    public int w;

    // int32 h = 4;
    public int h;

    public RectL() {
      clear();
    }

    public RectL clear() {
      x = 0;
      y = 0;
      w = 0;
      h = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.x != 0) {
        output.writeInt32(1, this.x);
      }
      if (this.y != 0) {
        output.writeInt32(2, this.y);
      }
      if (this.w != 0) {
        output.writeInt32(3, this.w);
      }
      if (this.h != 0) {
        output.writeInt32(4, this.h);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.x != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.x);
      }
      if (this.y != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(2, this.y);
      }
      if (this.w != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(3, this.w);
      }
      if (this.h != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(4, this.h);
      }
      return size;
    }

    @Override
    public RectL mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.x = input.readInt32();
            break;
          }
          case 16: {
            this.y = input.readInt32();
            break;
          }
          case 24: {
            this.w = input.readInt32();
            break;
          }
          case 32: {
            this.h = input.readInt32();
            break;
          }
        }
      }
    }

    public static RectL parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new RectL(), data);
    }

    public static RectL parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new RectL().mergeFrom(input);
    }
  }

  public static final class RotatedRect extends
      com.google.protobuf.nano.MessageNano {

    private static volatile RotatedRect[] _emptyArray;
    public static RotatedRect[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new RotatedRect[0];
          }
        }
      }
      return _emptyArray;
    }

    // float CenterX = 1;
    public float centerX;

    // float CenterY = 2;
    public float centerY;

    // float Width = 3;
    public float width;

    // float Height = 4;
    public float height;

    // float Angle = 5;
    public float angle;

    public RotatedRect() {
      clear();
    }

    public RotatedRect clear() {
      centerX = 0F;
      centerY = 0F;
      width = 0F;
      height = 0F;
      angle = 0F;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (java.lang.Float.floatToIntBits(this.centerX)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(1, this.centerX);
      }
      if (java.lang.Float.floatToIntBits(this.centerY)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(2, this.centerY);
      }
      if (java.lang.Float.floatToIntBits(this.width)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(3, this.width);
      }
      if (java.lang.Float.floatToIntBits(this.height)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(4, this.height);
      }
      if (java.lang.Float.floatToIntBits(this.angle)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(5, this.angle);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (java.lang.Float.floatToIntBits(this.centerX)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(1, this.centerX);
      }
      if (java.lang.Float.floatToIntBits(this.centerY)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(2, this.centerY);
      }
      if (java.lang.Float.floatToIntBits(this.width)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(3, this.width);
      }
      if (java.lang.Float.floatToIntBits(this.height)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(4, this.height);
      }
      if (java.lang.Float.floatToIntBits(this.angle)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(5, this.angle);
      }
      return size;
    }

    @Override
    public RotatedRect mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 13: {
            this.centerX = input.readFloat();
            break;
          }
          case 21: {
            this.centerY = input.readFloat();
            break;
          }
          case 29: {
            this.width = input.readFloat();
            break;
          }
          case 37: {
            this.height = input.readFloat();
            break;
          }
          case 45: {
            this.angle = input.readFloat();
            break;
          }
        }
      }
    }

    public static RotatedRect parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new RotatedRect(), data);
    }

    public static RotatedRect parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new RotatedRect().mergeFrom(input);
    }
  }

  public static final class Trajectory extends
      com.google.protobuf.nano.MessageNano {

    private static volatile Trajectory[] _emptyArray;
    public static Trajectory[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Trajectory[0];
          }
        }
      }
      return _emptyArray;
    }

    // int64 Timestamp = 1;
    public long timestamp;

    // .dg.model.Cutboard Cutboard = 2;
    public dg.model.nano.MatrixCommon.Cutboard cutboard;

    // int32 CenterX = 3;
    public int centerX;

    // int32 CenterY = 4;
    public int centerY;

    // int64 Sn = 5;
    public long sn;

    public Trajectory() {
      clear();
    }

    public Trajectory clear() {
      timestamp = 0L;
      cutboard = null;
      centerX = 0;
      centerY = 0;
      sn = 0L;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.timestamp != 0L) {
        output.writeInt64(1, this.timestamp);
      }
      if (this.cutboard != null) {
        output.writeMessage(2, this.cutboard);
      }
      if (this.centerX != 0) {
        output.writeInt32(3, this.centerX);
      }
      if (this.centerY != 0) {
        output.writeInt32(4, this.centerY);
      }
      if (this.sn != 0L) {
        output.writeInt64(5, this.sn);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.timestamp != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(1, this.timestamp);
      }
      if (this.cutboard != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(2, this.cutboard);
      }
      if (this.centerX != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(3, this.centerX);
      }
      if (this.centerY != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(4, this.centerY);
      }
      if (this.sn != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(5, this.sn);
      }
      return size;
    }

    @Override
    public Trajectory mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.timestamp = input.readInt64();
            break;
          }
          case 18: {
            if (this.cutboard == null) {
              this.cutboard = new dg.model.nano.MatrixCommon.Cutboard();
            }
            input.readMessage(this.cutboard);
            break;
          }
          case 24: {
            this.centerX = input.readInt32();
            break;
          }
          case 32: {
            this.centerY = input.readInt32();
            break;
          }
          case 40: {
            this.sn = input.readInt64();
            break;
          }
        }
      }
    }

    public static Trajectory parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Trajectory(), data);
    }

    public static Trajectory parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Trajectory().mergeFrom(input);
    }
  }

  public static final class CutboardImage extends
      com.google.protobuf.nano.MessageNano {

    private static volatile CutboardImage[] _emptyArray;
    public static CutboardImage[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new CutboardImage[0];
          }
        }
      }
      return _emptyArray;
    }

    // .dg.model.Cutboard Cutboard = 1;
    public dg.model.nano.MatrixCommon.Cutboard cutboard;

    // .dg.model.Image Img = 2;
    public dg.model.nano.MatrixCommon.Image img;

    // .dg.model.RotatedRect Rect = 3;
    public dg.model.nano.MatrixCommon.RotatedRect rect;

    // .dg.model.CutboardSpeed CutboardSpeed = 8;
    public int cutboardSpeed;

    // .dg.model.CutboardDirection CutboardDirection = 9;
    public int cutboardDirection;

    // repeated .dg.model.Trajectory Trajectory = 10;
    public dg.model.nano.MatrixCommon.Trajectory[] trajectory;

    public CutboardImage() {
      clear();
    }

    public CutboardImage clear() {
      cutboard = null;
      img = null;
      rect = null;
      cutboardSpeed = dg.model.nano.MatrixCommon.CUTBOARD_SPEED_UNKNOWN;
      cutboardDirection = dg.model.nano.MatrixCommon.CUTBOARD_DIRECTION_UNKNOWN;
      trajectory = dg.model.nano.MatrixCommon.Trajectory.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.cutboard != null) {
        output.writeMessage(1, this.cutboard);
      }
      if (this.img != null) {
        output.writeMessage(2, this.img);
      }
      if (this.rect != null) {
        output.writeMessage(3, this.rect);
      }
      if (this.cutboardSpeed != dg.model.nano.MatrixCommon.CUTBOARD_SPEED_UNKNOWN) {
        output.writeInt32(8, this.cutboardSpeed);
      }
      if (this.cutboardDirection != dg.model.nano.MatrixCommon.CUTBOARD_DIRECTION_UNKNOWN) {
        output.writeInt32(9, this.cutboardDirection);
      }
      if (this.trajectory != null && this.trajectory.length > 0) {
        for (int i = 0; i < this.trajectory.length; i++) {
          dg.model.nano.MatrixCommon.Trajectory element = this.trajectory[i];
          if (element != null) {
            output.writeMessage(10, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.cutboard != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(1, this.cutboard);
      }
      if (this.img != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(2, this.img);
      }
      if (this.rect != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(3, this.rect);
      }
      if (this.cutboardSpeed != dg.model.nano.MatrixCommon.CUTBOARD_SPEED_UNKNOWN) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(8, this.cutboardSpeed);
      }
      if (this.cutboardDirection != dg.model.nano.MatrixCommon.CUTBOARD_DIRECTION_UNKNOWN) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(9, this.cutboardDirection);
      }
      if (this.trajectory != null && this.trajectory.length > 0) {
        for (int i = 0; i < this.trajectory.length; i++) {
          dg.model.nano.MatrixCommon.Trajectory element = this.trajectory[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(10, element);
          }
        }
      }
      return size;
    }

    @Override
    public CutboardImage mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            if (this.cutboard == null) {
              this.cutboard = new dg.model.nano.MatrixCommon.Cutboard();
            }
            input.readMessage(this.cutboard);
            break;
          }
          case 18: {
            if (this.img == null) {
              this.img = new dg.model.nano.MatrixCommon.Image();
            }
            input.readMessage(this.img);
            break;
          }
          case 26: {
            if (this.rect == null) {
              this.rect = new dg.model.nano.MatrixCommon.RotatedRect();
            }
            input.readMessage(this.rect);
            break;
          }
          case 64: {
            int value = input.readInt32();
            switch (value) {
              case dg.model.nano.MatrixCommon.CUTBOARD_SPEED_UNKNOWN:
              case dg.model.nano.MatrixCommon.CUTBOARD_SPEED_HIGH:
              case dg.model.nano.MatrixCommon.CUTBOARD_SPEED_NORMAL:
              case dg.model.nano.MatrixCommon.CUTBOARD_SPEED_SLOW:
                this.cutboardSpeed = value;
                break;
            }
            break;
          }
          case 72: {
            int value = input.readInt32();
            switch (value) {
              case dg.model.nano.MatrixCommon.CUTBOARD_DIRECTION_UNKNOWN:
              case dg.model.nano.MatrixCommon.CUTBOARD_DIRECTION_UPWARD:
              case dg.model.nano.MatrixCommon.CUTBOARD_DIRECTION_DOWN:
              case dg.model.nano.MatrixCommon.CUTBOARD_DIRECTION_LEFT:
              case dg.model.nano.MatrixCommon.CUTBOARD_DIRECTION_RIGHT:
              case dg.model.nano.MatrixCommon.CUTBOARD_DIRECTION_LEFT_UPWARD:
              case dg.model.nano.MatrixCommon.CUTBOARD_DIRECTION_LEFT_DOWN:
              case dg.model.nano.MatrixCommon.CUTBOARD_DIRECTION_RIGHT_UPWARD:
              case dg.model.nano.MatrixCommon.CUTBOARD_DIRECTION_RIGHT_DOWN:
                this.cutboardDirection = value;
                break;
            }
            break;
          }
          case 82: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 82);
            int i = this.trajectory == null ? 0 : this.trajectory.length;
            dg.model.nano.MatrixCommon.Trajectory[] newArray =
                new dg.model.nano.MatrixCommon.Trajectory[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.trajectory, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new dg.model.nano.MatrixCommon.Trajectory();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new dg.model.nano.MatrixCommon.Trajectory();
            input.readMessage(newArray[i]);
            this.trajectory = newArray;
            break;
          }
        }
      }
    }

    public static CutboardImage parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new CutboardImage(), data);
    }

    public static CutboardImage parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new CutboardImage().mergeFrom(input);
    }
  }

  public static final class Color extends
      com.google.protobuf.nano.MessageNano {

    private static volatile Color[] _emptyArray;
    public static Color[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Color[0];
          }
        }
      }
      return _emptyArray;
    }

    // int32 ColorId = 1;
    public int colorId;

    // float Confidence = 2;
    public float confidence;

    // string ColorName = 3;
    public java.lang.String colorName;

    public Color() {
      clear();
    }

    public Color clear() {
      colorId = 0;
      confidence = 0F;
      colorName = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.colorId != 0) {
        output.writeInt32(1, this.colorId);
      }
      if (java.lang.Float.floatToIntBits(this.confidence)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(2, this.confidence);
      }
      if (!this.colorName.equals("")) {
        output.writeString(3, this.colorName);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.colorId != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.colorId);
      }
      if (java.lang.Float.floatToIntBits(this.confidence)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(2, this.confidence);
      }
      if (!this.colorName.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.colorName);
      }
      return size;
    }

    @Override
    public Color mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.colorId = input.readInt32();
            break;
          }
          case 21: {
            this.confidence = input.readFloat();
            break;
          }
          case 26: {
            this.colorName = input.readString();
            break;
          }
        }
      }
    }

    public static Color parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Color(), data);
    }

    public static Color parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Color().mergeFrom(input);
    }
  }

  public static final class FeatureVector extends
      com.google.protobuf.nano.MessageNano {

    private static volatile FeatureVector[] _emptyArray;
    public static FeatureVector[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new FeatureVector[0];
          }
        }
      }
      return _emptyArray;
    }

    // int64 Id = 1;
    public long id;

    // string Feature = 2;
    public java.lang.String feature;

    public FeatureVector() {
      clear();
    }

    public FeatureVector clear() {
      id = 0L;
      feature = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.id != 0L) {
        output.writeInt64(1, this.id);
      }
      if (!this.feature.equals("")) {
        output.writeString(2, this.feature);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.id != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(1, this.id);
      }
      if (!this.feature.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.feature);
      }
      return size;
    }

    @Override
    public FeatureVector mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.id = input.readInt64();
            break;
          }
          case 18: {
            this.feature = input.readString();
            break;
          }
        }
      }
    }

    public static FeatureVector parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new FeatureVector(), data);
    }

    public static FeatureVector parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new FeatureVector().mergeFrom(input);
    }
  }

  public static final class NullMessage extends
      com.google.protobuf.nano.MessageNano {

    private static volatile NullMessage[] _emptyArray;
    public static NullMessage[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new NullMessage[0];
          }
        }
      }
      return _emptyArray;
    }

    public NullMessage() {
      clear();
    }

    public NullMessage clear() {
      cachedSize = -1;
      return this;
    }

    @Override
    public NullMessage mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
        }
      }
    }

    public static NullMessage parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new NullMessage(), data);
    }

    public static NullMessage parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new NullMessage().mergeFrom(input);
    }
  }

  public static final class Attribute extends
      com.google.protobuf.nano.MessageNano {

    private static volatile Attribute[] _emptyArray;
    public static Attribute[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Attribute[0];
          }
        }
      }
      return _emptyArray;
    }

    // int32 AttributeId = 1;
    public int attributeId;

    // string AttributeName = 2;
    public java.lang.String attributeName;

    // int32 ValueId = 3;
    public int valueId;

    // string ValueString = 4;
    public java.lang.String valueString;

    // float Confidence = 5;
    public float confidence;

    public Attribute() {
      clear();
    }

    public Attribute clear() {
      attributeId = 0;
      attributeName = "";
      valueId = 0;
      valueString = "";
      confidence = 0F;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.attributeId != 0) {
        output.writeInt32(1, this.attributeId);
      }
      if (!this.attributeName.equals("")) {
        output.writeString(2, this.attributeName);
      }
      if (this.valueId != 0) {
        output.writeInt32(3, this.valueId);
      }
      if (!this.valueString.equals("")) {
        output.writeString(4, this.valueString);
      }
      if (java.lang.Float.floatToIntBits(this.confidence)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(5, this.confidence);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.attributeId != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.attributeId);
      }
      if (!this.attributeName.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.attributeName);
      }
      if (this.valueId != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(3, this.valueId);
      }
      if (!this.valueString.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.valueString);
      }
      if (java.lang.Float.floatToIntBits(this.confidence)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(5, this.confidence);
      }
      return size;
    }

    @Override
    public Attribute mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.attributeId = input.readInt32();
            break;
          }
          case 18: {
            this.attributeName = input.readString();
            break;
          }
          case 24: {
            this.valueId = input.readInt32();
            break;
          }
          case 34: {
            this.valueString = input.readString();
            break;
          }
          case 45: {
            this.confidence = input.readFloat();
            break;
          }
        }
      }
    }

    public static Attribute parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Attribute(), data);
    }

    public static Attribute parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Attribute().mergeFrom(input);
    }
  }

  public static final class FaceAttribute extends
      com.google.protobuf.nano.MessageNano {
    public static final int VALUEBOOL_FIELD_NUMBER = 9;
    public static final int VALUEINT_FIELD_NUMBER = 10;
    public static final int VALUEFLOAT_FIELD_NUMBER = 11;
    public static final int VALUESTRING_FIELD_NUMBER = 12;
    private int valueCase_ = 0;
    private java.lang.Object value_;
    public int getValueCase() {
      return this.valueCase_;
    }
    public FaceAttribute clearValue() {
      this.valueCase_ = 0;
      this.value_ = null;
      return this;
    }

    private static volatile FaceAttribute[] _emptyArray;
    public static FaceAttribute[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new FaceAttribute[0];
          }
        }
      }
      return _emptyArray;
    }

    // int32 AttributeId = 1;
    public int attributeId;

    // string Name = 2;
    public java.lang.String name;

    // int32 ValueId = 3;
    public int valueId;

    // float Confidence = 4;
    public float confidence;

    // bool ValueBool = 9;
    public boolean hasValueBool() {
      return this.valueCase_ == 9;
    }
    public boolean getValueBool() {
      if (this.valueCase_ == 9) {
        return (boolean) (java.lang.Boolean) this.value_;
      }
      return false;
    }
    public FaceAttribute setValueBool(boolean value) {
      this.valueCase_ = 9;
      this.value_ = value;
      return this;
    }

    // int32 ValueInt = 10;
    public boolean hasValueInt() {
      return this.valueCase_ == 10;
    }
    public int getValueInt() {
      if (this.valueCase_ == 10) {
        return (int) (java.lang.Integer) this.value_;
      }
      return 0;
    }
    public FaceAttribute setValueInt(int value) {
      this.valueCase_ = 10;
      this.value_ = value;
      return this;
    }

    // float ValueFloat = 11;
    public boolean hasValueFloat() {
      return this.valueCase_ == 11;
    }
    public float getValueFloat() {
      if (this.valueCase_ == 11) {
        return (float) (java.lang.Float) this.value_;
      }
      return 0F;
    }
    public FaceAttribute setValueFloat(float value) {
      this.valueCase_ = 11;
      this.value_ = value;
      return this;
    }

    // string ValueString = 12;
    public boolean hasValueString() {
      return this.valueCase_ == 12;
    }
    public java.lang.String getValueString() {
      if (this.valueCase_ == 12) {
        return (java.lang.String) (java.lang.String) this.value_;
      }
      return "";
    }
    public FaceAttribute setValueString(java.lang.String value) {
      this.valueCase_ = 12;
      this.value_ = value;
      return this;
    }

    // string ValueStr = 19;
    public java.lang.String valueStr;

    // .dg.model.ValueType ValueType = 20;
    public int valueType;

    public FaceAttribute() {
      clear();
    }

    public FaceAttribute clear() {
      attributeId = 0;
      name = "";
      valueId = 0;
      confidence = 0F;
      valueStr = "";
      valueType = dg.model.nano.MatrixCommon.ValueType_Unknown;
      clearValue();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.attributeId != 0) {
        output.writeInt32(1, this.attributeId);
      }
      if (!this.name.equals("")) {
        output.writeString(2, this.name);
      }
      if (this.valueId != 0) {
        output.writeInt32(3, this.valueId);
      }
      if (java.lang.Float.floatToIntBits(this.confidence)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(4, this.confidence);
      }
      if (this.valueCase_ == 9) {
        output.writeBool(
            9, (java.lang.Boolean) this.value_);
      }
      if (this.valueCase_ == 10) {
        output.writeInt32(
            10, (java.lang.Integer) this.value_);
      }
      if (this.valueCase_ == 11) {
        output.writeFloat(
            11, (java.lang.Float) this.value_);
      }
      if (this.valueCase_ == 12) {
        output.writeString(
            12, (java.lang.String) this.value_);
      }
      if (!this.valueStr.equals("")) {
        output.writeString(19, this.valueStr);
      }
      if (this.valueType != dg.model.nano.MatrixCommon.ValueType_Unknown) {
        output.writeInt32(20, this.valueType);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.attributeId != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.attributeId);
      }
      if (!this.name.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.name);
      }
      if (this.valueId != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(3, this.valueId);
      }
      if (java.lang.Float.floatToIntBits(this.confidence)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(4, this.confidence);
      }
      if (this.valueCase_ == 9) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(
                9, (java.lang.Boolean) this.value_);
      }
      if (this.valueCase_ == 10) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(
                10, (java.lang.Integer) this.value_);
      }
      if (this.valueCase_ == 11) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(
                11, (java.lang.Float) this.value_);
      }
      if (this.valueCase_ == 12) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(
                12, (java.lang.String) this.value_);
      }
      if (!this.valueStr.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(19, this.valueStr);
      }
      if (this.valueType != dg.model.nano.MatrixCommon.ValueType_Unknown) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(20, this.valueType);
      }
      return size;
    }

    @Override
    public FaceAttribute mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.attributeId = input.readInt32();
            break;
          }
          case 18: {
            this.name = input.readString();
            break;
          }
          case 24: {
            this.valueId = input.readInt32();
            break;
          }
          case 37: {
            this.confidence = input.readFloat();
            break;
          }
          case 72: {
            this.value_ = input.readBool();
            this.valueCase_ = 9;
            break;
          }
          case 80: {
            this.value_ = input.readInt32();
            this.valueCase_ = 10;
            break;
          }
          case 93: {
            this.value_ = input.readFloat();
            this.valueCase_ = 11;
            break;
          }
          case 98: {
            this.value_ = input.readString();
            this.valueCase_ = 12;
            break;
          }
          case 154: {
            this.valueStr = input.readString();
            break;
          }
          case 160: {
            int value = input.readInt32();
            switch (value) {
              case dg.model.nano.MatrixCommon.ValueType_Unknown:
              case dg.model.nano.MatrixCommon.ValueType_String:
              case dg.model.nano.MatrixCommon.ValueType_Int:
              case dg.model.nano.MatrixCommon.ValueType_Float:
              case dg.model.nano.MatrixCommon.ValueType_Bool:
                this.valueType = value;
                break;
            }
            break;
          }
        }
      }
    }

    public static FaceAttribute parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new FaceAttribute(), data);
    }

    public static FaceAttribute parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new FaceAttribute().mergeFrom(input);
    }
  }

  public static final class Image extends
      com.google.protobuf.nano.MessageNano {

    private static volatile Image[] _emptyArray;
    public static Image[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Image[0];
          }
        }
      }
      return _emptyArray;
    }

    // string Id = 1;
    public java.lang.String id;

    // int32 Width = 2;
    public int width;

    // int32 Height = 3;
    public int height;

    // string URI = 4;
    public java.lang.String uRI;

    // string BinData = 5;
    public java.lang.String binData;

    // int64 Sn = 10;
    public long sn;

    public Image() {
      clear();
    }

    public Image clear() {
      id = "";
      width = 0;
      height = 0;
      uRI = "";
      binData = "";
      sn = 0L;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.id.equals("")) {
        output.writeString(1, this.id);
      }
      if (this.width != 0) {
        output.writeInt32(2, this.width);
      }
      if (this.height != 0) {
        output.writeInt32(3, this.height);
      }
      if (!this.uRI.equals("")) {
        output.writeString(4, this.uRI);
      }
      if (!this.binData.equals("")) {
        output.writeString(5, this.binData);
      }
      if (this.sn != 0L) {
        output.writeInt64(10, this.sn);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.id.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.id);
      }
      if (this.width != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(2, this.width);
      }
      if (this.height != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(3, this.height);
      }
      if (!this.uRI.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.uRI);
      }
      if (!this.binData.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.binData);
      }
      if (this.sn != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(10, this.sn);
      }
      return size;
    }

    @Override
    public Image mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.id = input.readString();
            break;
          }
          case 16: {
            this.width = input.readInt32();
            break;
          }
          case 24: {
            this.height = input.readInt32();
            break;
          }
          case 34: {
            this.uRI = input.readString();
            break;
          }
          case 42: {
            this.binData = input.readString();
            break;
          }
          case 80: {
            this.sn = input.readInt64();
            break;
          }
        }
      }
    }

    public static Image parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Image(), data);
    }

    public static Image parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Image().mergeFrom(input);
    }
  }

  public static final class FaceAlignResult extends
      com.google.protobuf.nano.MessageNano {

    private static volatile FaceAlignResult[] _emptyArray;
    public static FaceAlignResult[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new FaceAlignResult[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .dg.model.PointF LandMarks = 1;
    public dg.model.nano.MatrixCommon.PointF[] landMarks;

    // repeated float LandMarkScores = 2;
    public float[] landMarkScores;

    // .dg.model.Rect Box = 3;
    public dg.model.nano.MatrixCommon.Rect box;

    // map<string, float> Scores = 4;
    public java.util.Map<java.lang.String, java.lang.Float> scores;

    public FaceAlignResult() {
      clear();
    }

    public FaceAlignResult clear() {
      landMarks = dg.model.nano.MatrixCommon.PointF.emptyArray();
      landMarkScores = com.google.protobuf.nano.WireFormatNano.EMPTY_FLOAT_ARRAY;
      box = null;
      scores = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.landMarks != null && this.landMarks.length > 0) {
        for (int i = 0; i < this.landMarks.length; i++) {
          dg.model.nano.MatrixCommon.PointF element = this.landMarks[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      if (this.landMarkScores != null && this.landMarkScores.length > 0) {
        for (int i = 0; i < this.landMarkScores.length; i++) {
          output.writeFloat(2, this.landMarkScores[i]);
        }
      }
      if (this.box != null) {
        output.writeMessage(3, this.box);
      }
      if (this.scores != null) {
        com.google.protobuf.nano.InternalNano.serializeMapField(
          output, this.scores, 4,
        com.google.protobuf.nano.InternalNano.TYPE_STRING,
        com.google.protobuf.nano.InternalNano.TYPE_FLOAT);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.landMarks != null && this.landMarks.length > 0) {
        for (int i = 0; i < this.landMarks.length; i++) {
          dg.model.nano.MatrixCommon.PointF element = this.landMarks[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      if (this.landMarkScores != null && this.landMarkScores.length > 0) {
        int dataSize = 4 * this.landMarkScores.length;
        size += dataSize;
        size += 1 * this.landMarkScores.length;
      }
      if (this.box != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(3, this.box);
      }
      if (this.scores != null) {
        size += com.google.protobuf.nano.InternalNano.computeMapFieldSize(
          this.scores, 4,
        com.google.protobuf.nano.InternalNano.TYPE_STRING,
        com.google.protobuf.nano.InternalNano.TYPE_FLOAT);
      }
      return size;
    }

    @Override
    public FaceAlignResult mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      com.google.protobuf.nano.MapFactories.MapFactory mapFactory =
        com.google.protobuf.nano.MapFactories.getMapFactory();
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.landMarks == null ? 0 : this.landMarks.length;
            dg.model.nano.MatrixCommon.PointF[] newArray =
                new dg.model.nano.MatrixCommon.PointF[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.landMarks, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new dg.model.nano.MatrixCommon.PointF();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new dg.model.nano.MatrixCommon.PointF();
            input.readMessage(newArray[i]);
            this.landMarks = newArray;
            break;
          }
          case 21: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 21);
            int i = this.landMarkScores == null ? 0 : this.landMarkScores.length;
            float[] newArray = new float[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.landMarkScores, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readFloat();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readFloat();
            this.landMarkScores = newArray;
            break;
          }
          case 18: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            int arrayLength = length / 4;
            int i = this.landMarkScores == null ? 0 : this.landMarkScores.length;
            float[] newArray = new float[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.landMarkScores, 0, newArray, 0, i);
            }
            for (; i < newArray.length; i++) {
              newArray[i] = input.readFloat();
            }
            this.landMarkScores = newArray;
            input.popLimit(limit);
            break;
          }
          case 26: {
            if (this.box == null) {
              this.box = new dg.model.nano.MatrixCommon.Rect();
            }
            input.readMessage(this.box);
            break;
          }
          case 34: {
            this.scores = com.google.protobuf.nano.InternalNano.mergeMapEntry(
              input, this.scores, mapFactory,
              com.google.protobuf.nano.InternalNano.TYPE_STRING,
              com.google.protobuf.nano.InternalNano.TYPE_FLOAT,
              null,
              10, 21);

            break;
          }
        }
      }
    }

    public static FaceAlignResult parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new FaceAlignResult(), data);
    }

    public static FaceAlignResult parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new FaceAlignResult().mergeFrom(input);
    }
  }

  public static final class FaceOwner extends
      com.google.protobuf.nano.MessageNano {

    private static volatile FaceOwner[] _emptyArray;
    public static FaceOwner[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new FaceOwner[0];
          }
        }
      }
      return _emptyArray;
    }

    // int32 OwnerType = 1;
    public int ownerType;

    // string OwnerId = 2;
    public java.lang.String ownerId;

    // .dg.model.RecPedestrian RecPedestrian = 4;
    public dg.model.nano.MatrixCommon.RecPedestrian recPedestrian;

    // .dg.model.RecVehicle RecVehicle = 5;
    public dg.model.nano.MatrixCommon.RecVehicle recVehicle;

    // .dg.model.RecNonMotorVehicle RecNonMotorVehicle = 6;
    public dg.model.nano.MatrixCommon.RecNonMotorVehicle recNonMotorVehicle;

    public FaceOwner() {
      clear();
    }

    public FaceOwner clear() {
      ownerType = 0;
      ownerId = "";
      recPedestrian = null;
      recVehicle = null;
      recNonMotorVehicle = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.ownerType != 0) {
        output.writeInt32(1, this.ownerType);
      }
      if (!this.ownerId.equals("")) {
        output.writeString(2, this.ownerId);
      }
      if (this.recPedestrian != null) {
        output.writeMessage(4, this.recPedestrian);
      }
      if (this.recVehicle != null) {
        output.writeMessage(5, this.recVehicle);
      }
      if (this.recNonMotorVehicle != null) {
        output.writeMessage(6, this.recNonMotorVehicle);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.ownerType != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.ownerType);
      }
      if (!this.ownerId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.ownerId);
      }
      if (this.recPedestrian != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(4, this.recPedestrian);
      }
      if (this.recVehicle != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(5, this.recVehicle);
      }
      if (this.recNonMotorVehicle != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(6, this.recNonMotorVehicle);
      }
      return size;
    }

    @Override
    public FaceOwner mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.ownerType = input.readInt32();
            break;
          }
          case 18: {
            this.ownerId = input.readString();
            break;
          }
          case 34: {
            if (this.recPedestrian == null) {
              this.recPedestrian = new dg.model.nano.MatrixCommon.RecPedestrian();
            }
            input.readMessage(this.recPedestrian);
            break;
          }
          case 42: {
            if (this.recVehicle == null) {
              this.recVehicle = new dg.model.nano.MatrixCommon.RecVehicle();
            }
            input.readMessage(this.recVehicle);
            break;
          }
          case 50: {
            if (this.recNonMotorVehicle == null) {
              this.recNonMotorVehicle = new dg.model.nano.MatrixCommon.RecNonMotorVehicle();
            }
            input.readMessage(this.recNonMotorVehicle);
            break;
          }
        }
      }
    }

    public static FaceOwner parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new FaceOwner(), data);
    }

    public static FaceOwner parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new FaceOwner().mergeFrom(input);
    }
  }

  public static final class RecFace extends
      com.google.protobuf.nano.MessageNano {

    private static volatile RecFace[] _emptyArray;
    public static RecFace[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new RecFace[0];
          }
        }
      }
      return _emptyArray;
    }

    // int64 Id = 1;
    public long id;

    // float Confidence = 2;
    public float confidence;

    // .dg.model.CutboardImage Img = 3;
    public dg.model.nano.MatrixCommon.CutboardImage img;

    // .dg.model.FaceAlignResult AlignResult = 4;
    public dg.model.nano.MatrixCommon.FaceAlignResult alignResult;

    // map<string, float> Qualities = 5;
    public java.util.Map<java.lang.String, java.lang.Float> qualities;

    // string Features = 6;
    public java.lang.String features;

    // repeated .dg.model.FaceAttribute Attributes = 7;
    public dg.model.nano.MatrixCommon.FaceAttribute[] attributes;

    // .dg.model.Image AlignedImage = 8;
    public dg.model.nano.MatrixCommon.Image alignedImage;

    // .dg.model.FaceAlignResult TransformedAlignResult = 9;
    public dg.model.nano.MatrixCommon.FaceAlignResult transformedAlignResult;

    // string FaceId = 10;
    public java.lang.String faceId;

    // .dg.model.FaceOwner Owner = 11;
    public dg.model.nano.MatrixCommon.FaceOwner owner;

    // .dg.model.SrcMetadata Metadata = 64;
    public dg.model.nano.MatrixCommon.SrcMetadata metadata;

    // .dg.model.Image OriginImg = 65;
    public dg.model.nano.MatrixCommon.Image originImg;

    // string UId = 99;
    public java.lang.String uId;

    // string ReId = 100;
    public java.lang.String reId;

    public RecFace() {
      clear();
    }

    public RecFace clear() {
      id = 0L;
      confidence = 0F;
      img = null;
      alignResult = null;
      qualities = null;
      features = "";
      attributes = dg.model.nano.MatrixCommon.FaceAttribute.emptyArray();
      alignedImage = null;
      transformedAlignResult = null;
      faceId = "";
      owner = null;
      metadata = null;
      originImg = null;
      uId = "";
      reId = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.id != 0L) {
        output.writeInt64(1, this.id);
      }
      if (java.lang.Float.floatToIntBits(this.confidence)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(2, this.confidence);
      }
      if (this.img != null) {
        output.writeMessage(3, this.img);
      }
      if (this.alignResult != null) {
        output.writeMessage(4, this.alignResult);
      }
      if (this.qualities != null) {
        com.google.protobuf.nano.InternalNano.serializeMapField(
          output, this.qualities, 5,
        com.google.protobuf.nano.InternalNano.TYPE_STRING,
        com.google.protobuf.nano.InternalNano.TYPE_FLOAT);
      }
      if (!this.features.equals("")) {
        output.writeString(6, this.features);
      }
      if (this.attributes != null && this.attributes.length > 0) {
        for (int i = 0; i < this.attributes.length; i++) {
          dg.model.nano.MatrixCommon.FaceAttribute element = this.attributes[i];
          if (element != null) {
            output.writeMessage(7, element);
          }
        }
      }
      if (this.alignedImage != null) {
        output.writeMessage(8, this.alignedImage);
      }
      if (this.transformedAlignResult != null) {
        output.writeMessage(9, this.transformedAlignResult);
      }
      if (!this.faceId.equals("")) {
        output.writeString(10, this.faceId);
      }
      if (this.owner != null) {
        output.writeMessage(11, this.owner);
      }
      if (this.metadata != null) {
        output.writeMessage(64, this.metadata);
      }
      if (this.originImg != null) {
        output.writeMessage(65, this.originImg);
      }
      if (!this.uId.equals("")) {
        output.writeString(99, this.uId);
      }
      if (!this.reId.equals("")) {
        output.writeString(100, this.reId);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.id != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(1, this.id);
      }
      if (java.lang.Float.floatToIntBits(this.confidence)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(2, this.confidence);
      }
      if (this.img != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(3, this.img);
      }
      if (this.alignResult != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(4, this.alignResult);
      }
      if (this.qualities != null) {
        size += com.google.protobuf.nano.InternalNano.computeMapFieldSize(
          this.qualities, 5,
        com.google.protobuf.nano.InternalNano.TYPE_STRING,
        com.google.protobuf.nano.InternalNano.TYPE_FLOAT);
      }
      if (!this.features.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(6, this.features);
      }
      if (this.attributes != null && this.attributes.length > 0) {
        for (int i = 0; i < this.attributes.length; i++) {
          dg.model.nano.MatrixCommon.FaceAttribute element = this.attributes[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(7, element);
          }
        }
      }
      if (this.alignedImage != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(8, this.alignedImage);
      }
      if (this.transformedAlignResult != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(9, this.transformedAlignResult);
      }
      if (!this.faceId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(10, this.faceId);
      }
      if (this.owner != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(11, this.owner);
      }
      if (this.metadata != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(64, this.metadata);
      }
      if (this.originImg != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(65, this.originImg);
      }
      if (!this.uId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(99, this.uId);
      }
      if (!this.reId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(100, this.reId);
      }
      return size;
    }

    @Override
    public RecFace mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      com.google.protobuf.nano.MapFactories.MapFactory mapFactory =
        com.google.protobuf.nano.MapFactories.getMapFactory();
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.id = input.readInt64();
            break;
          }
          case 21: {
            this.confidence = input.readFloat();
            break;
          }
          case 26: {
            if (this.img == null) {
              this.img = new dg.model.nano.MatrixCommon.CutboardImage();
            }
            input.readMessage(this.img);
            break;
          }
          case 34: {
            if (this.alignResult == null) {
              this.alignResult = new dg.model.nano.MatrixCommon.FaceAlignResult();
            }
            input.readMessage(this.alignResult);
            break;
          }
          case 42: {
            this.qualities = com.google.protobuf.nano.InternalNano.mergeMapEntry(
              input, this.qualities, mapFactory,
              com.google.protobuf.nano.InternalNano.TYPE_STRING,
              com.google.protobuf.nano.InternalNano.TYPE_FLOAT,
              null,
              10, 21);

            break;
          }
          case 50: {
            this.features = input.readString();
            break;
          }
          case 58: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 58);
            int i = this.attributes == null ? 0 : this.attributes.length;
            dg.model.nano.MatrixCommon.FaceAttribute[] newArray =
                new dg.model.nano.MatrixCommon.FaceAttribute[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.attributes, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new dg.model.nano.MatrixCommon.FaceAttribute();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new dg.model.nano.MatrixCommon.FaceAttribute();
            input.readMessage(newArray[i]);
            this.attributes = newArray;
            break;
          }
          case 66: {
            if (this.alignedImage == null) {
              this.alignedImage = new dg.model.nano.MatrixCommon.Image();
            }
            input.readMessage(this.alignedImage);
            break;
          }
          case 74: {
            if (this.transformedAlignResult == null) {
              this.transformedAlignResult = new dg.model.nano.MatrixCommon.FaceAlignResult();
            }
            input.readMessage(this.transformedAlignResult);
            break;
          }
          case 82: {
            this.faceId = input.readString();
            break;
          }
          case 90: {
            if (this.owner == null) {
              this.owner = new dg.model.nano.MatrixCommon.FaceOwner();
            }
            input.readMessage(this.owner);
            break;
          }
          case 514: {
            if (this.metadata == null) {
              this.metadata = new dg.model.nano.MatrixCommon.SrcMetadata();
            }
            input.readMessage(this.metadata);
            break;
          }
          case 522: {
            if (this.originImg == null) {
              this.originImg = new dg.model.nano.MatrixCommon.Image();
            }
            input.readMessage(this.originImg);
            break;
          }
          case 794: {
            this.uId = input.readString();
            break;
          }
          case 802: {
            this.reId = input.readString();
            break;
          }
        }
      }
    }

    public static RecFace parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new RecFace(), data);
    }

    public static RecFace parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new RecFace().mergeFrom(input);
    }
  }

  public static final class MatchedFace extends
      com.google.protobuf.nano.MessageNano {

    private static volatile MatchedFace[] _emptyArray;
    public static MatchedFace[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new MatchedFace[0];
          }
        }
      }
      return _emptyArray;
    }

    // .dg.model.RecFace OriginFace = 1;
    public dg.model.nano.MatrixCommon.RecFace originFace;

    // .dg.model.RecFace MatchedFace = 2;
    public dg.model.nano.MatrixCommon.RecFace matchedFace;

    public MatchedFace() {
      clear();
    }

    public MatchedFace clear() {
      originFace = null;
      matchedFace = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.originFace != null) {
        output.writeMessage(1, this.originFace);
      }
      if (this.matchedFace != null) {
        output.writeMessage(2, this.matchedFace);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.originFace != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(1, this.originFace);
      }
      if (this.matchedFace != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(2, this.matchedFace);
      }
      return size;
    }

    @Override
    public MatchedFace mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            if (this.originFace == null) {
              this.originFace = new dg.model.nano.MatrixCommon.RecFace();
            }
            input.readMessage(this.originFace);
            break;
          }
          case 18: {
            if (this.matchedFace == null) {
              this.matchedFace = new dg.model.nano.MatrixCommon.RecFace();
            }
            input.readMessage(this.matchedFace);
            break;
          }
        }
      }
    }

    public static MatchedFace parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new MatchedFace(), data);
    }

    public static MatchedFace parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new MatchedFace().mergeFrom(input);
    }
  }

  public static final class NameAndConfidence extends
      com.google.protobuf.nano.MessageNano {

    private static volatile NameAndConfidence[] _emptyArray;
    public static NameAndConfidence[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new NameAndConfidence[0];
          }
        }
      }
      return _emptyArray;
    }

    // int32 Id = 1;
    public int id;

    // string Name = 2;
    public java.lang.String name;

    // float Confidence = 3;
    public float confidence;

    public NameAndConfidence() {
      clear();
    }

    public NameAndConfidence clear() {
      id = 0;
      name = "";
      confidence = 0F;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.id != 0) {
        output.writeInt32(1, this.id);
      }
      if (!this.name.equals("")) {
        output.writeString(2, this.name);
      }
      if (java.lang.Float.floatToIntBits(this.confidence)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(3, this.confidence);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.id != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.id);
      }
      if (!this.name.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.name);
      }
      if (java.lang.Float.floatToIntBits(this.confidence)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(3, this.confidence);
      }
      return size;
    }

    @Override
    public NameAndConfidence mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.id = input.readInt32();
            break;
          }
          case 18: {
            this.name = input.readString();
            break;
          }
          case 29: {
            this.confidence = input.readFloat();
            break;
          }
        }
      }
    }

    public static NameAndConfidence parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new NameAndConfidence(), data);
    }

    public static NameAndConfidence parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new NameAndConfidence().mergeFrom(input);
    }
  }

  public static final class CategoryAndFeature extends
      com.google.protobuf.nano.MessageNano {

    private static volatile CategoryAndFeature[] _emptyArray;
    public static CategoryAndFeature[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new CategoryAndFeature[0];
          }
        }
      }
      return _emptyArray;
    }

    // int32 Id = 1;
    public int id;

    // string CategoryName = 2;
    public java.lang.String categoryName;

    // repeated .dg.model.NameAndConfidence Items = 3;
    public dg.model.nano.MatrixCommon.NameAndConfidence[] items;

    public CategoryAndFeature() {
      clear();
    }

    public CategoryAndFeature clear() {
      id = 0;
      categoryName = "";
      items = dg.model.nano.MatrixCommon.NameAndConfidence.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.id != 0) {
        output.writeInt32(1, this.id);
      }
      if (!this.categoryName.equals("")) {
        output.writeString(2, this.categoryName);
      }
      if (this.items != null && this.items.length > 0) {
        for (int i = 0; i < this.items.length; i++) {
          dg.model.nano.MatrixCommon.NameAndConfidence element = this.items[i];
          if (element != null) {
            output.writeMessage(3, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.id != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.id);
      }
      if (!this.categoryName.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.categoryName);
      }
      if (this.items != null && this.items.length > 0) {
        for (int i = 0; i < this.items.length; i++) {
          dg.model.nano.MatrixCommon.NameAndConfidence element = this.items[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(3, element);
          }
        }
      }
      return size;
    }

    @Override
    public CategoryAndFeature mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.id = input.readInt32();
            break;
          }
          case 18: {
            this.categoryName = input.readString();
            break;
          }
          case 26: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 26);
            int i = this.items == null ? 0 : this.items.length;
            dg.model.nano.MatrixCommon.NameAndConfidence[] newArray =
                new dg.model.nano.MatrixCommon.NameAndConfidence[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.items, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new dg.model.nano.MatrixCommon.NameAndConfidence();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new dg.model.nano.MatrixCommon.NameAndConfidence();
            input.readMessage(newArray[i]);
            this.items = newArray;
            break;
          }
        }
      }
    }

    public static CategoryAndFeature parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new CategoryAndFeature(), data);
    }

    public static CategoryAndFeature parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new CategoryAndFeature().mergeFrom(input);
    }
  }

  public static final class PeopleAttr extends
      com.google.protobuf.nano.MessageNano {

    private static volatile PeopleAttr[] _emptyArray;
    public static PeopleAttr[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new PeopleAttr[0];
          }
        }
      }
      return _emptyArray;
    }

    // .dg.model.NameAndConfidence Sex = 1;
    public dg.model.nano.MatrixCommon.NameAndConfidence sex;

    // .dg.model.NameAndConfidence Age = 2;
    public dg.model.nano.MatrixCommon.NameAndConfidence age;

    // .dg.model.NameAndConfidence National = 3;
    public dg.model.nano.MatrixCommon.NameAndConfidence national;

    // repeated .dg.model.CategoryAndFeature Category = 4;
    public dg.model.nano.MatrixCommon.CategoryAndFeature[] category;

    public PeopleAttr() {
      clear();
    }

    public PeopleAttr clear() {
      sex = null;
      age = null;
      national = null;
      category = dg.model.nano.MatrixCommon.CategoryAndFeature.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.sex != null) {
        output.writeMessage(1, this.sex);
      }
      if (this.age != null) {
        output.writeMessage(2, this.age);
      }
      if (this.national != null) {
        output.writeMessage(3, this.national);
      }
      if (this.category != null && this.category.length > 0) {
        for (int i = 0; i < this.category.length; i++) {
          dg.model.nano.MatrixCommon.CategoryAndFeature element = this.category[i];
          if (element != null) {
            output.writeMessage(4, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.sex != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(1, this.sex);
      }
      if (this.age != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(2, this.age);
      }
      if (this.national != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(3, this.national);
      }
      if (this.category != null && this.category.length > 0) {
        for (int i = 0; i < this.category.length; i++) {
          dg.model.nano.MatrixCommon.CategoryAndFeature element = this.category[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(4, element);
          }
        }
      }
      return size;
    }

    @Override
    public PeopleAttr mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            if (this.sex == null) {
              this.sex = new dg.model.nano.MatrixCommon.NameAndConfidence();
            }
            input.readMessage(this.sex);
            break;
          }
          case 18: {
            if (this.age == null) {
              this.age = new dg.model.nano.MatrixCommon.NameAndConfidence();
            }
            input.readMessage(this.age);
            break;
          }
          case 26: {
            if (this.national == null) {
              this.national = new dg.model.nano.MatrixCommon.NameAndConfidence();
            }
            input.readMessage(this.national);
            break;
          }
          case 34: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 34);
            int i = this.category == null ? 0 : this.category.length;
            dg.model.nano.MatrixCommon.CategoryAndFeature[] newArray =
                new dg.model.nano.MatrixCommon.CategoryAndFeature[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.category, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new dg.model.nano.MatrixCommon.CategoryAndFeature();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new dg.model.nano.MatrixCommon.CategoryAndFeature();
            input.readMessage(newArray[i]);
            this.category = newArray;
            break;
          }
        }
      }
    }

    public static PeopleAttr parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new PeopleAttr(), data);
    }

    public static PeopleAttr parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new PeopleAttr().mergeFrom(input);
    }
  }

  public static final class EAImage extends
      com.google.protobuf.nano.MessageNano {

    private static volatile EAImage[] _emptyArray;
    public static EAImage[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new EAImage[0];
          }
        }
      }
      return _emptyArray;
    }

    // .dg.model.Image EAImage = 1;
    public dg.model.nano.MatrixCommon.Image eAImage;

    // int64 Timestamp = 2;
    public long timestamp;

    public EAImage() {
      clear();
    }

    public EAImage clear() {
      eAImage = null;
      timestamp = 0L;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.eAImage != null) {
        output.writeMessage(1, this.eAImage);
      }
      if (this.timestamp != 0L) {
        output.writeInt64(2, this.timestamp);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.eAImage != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(1, this.eAImage);
      }
      if (this.timestamp != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(2, this.timestamp);
      }
      return size;
    }

    @Override
    public EAImage mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            if (this.eAImage == null) {
              this.eAImage = new dg.model.nano.MatrixCommon.Image();
            }
            input.readMessage(this.eAImage);
            break;
          }
          case 16: {
            this.timestamp = input.readInt64();
            break;
          }
        }
      }
    }

    public static EAImage parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new EAImage(), data);
    }

    public static EAImage parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new EAImage().mergeFrom(input);
    }
  }

  public static final class EventInfo extends
      com.google.protobuf.nano.MessageNano {

    private static volatile EventInfo[] _emptyArray;
    public static EventInfo[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new EventInfo[0];
          }
        }
      }
      return _emptyArray;
    }

    // string RuleId = 1;
    public java.lang.String ruleId;

    // .dg.model.EventType EventType = 2;
    public int eventType;

    // repeated .dg.model.EAImage ImageInfo = 3;
    public dg.model.nano.MatrixCommon.EAImage[] imageInfo;

    public EventInfo() {
      clear();
    }

    public EventInfo clear() {
      ruleId = "";
      eventType = dg.model.nano.MatrixCommon.Event_UNKNOWN;
      imageInfo = dg.model.nano.MatrixCommon.EAImage.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.ruleId.equals("")) {
        output.writeString(1, this.ruleId);
      }
      if (this.eventType != dg.model.nano.MatrixCommon.Event_UNKNOWN) {
        output.writeInt32(2, this.eventType);
      }
      if (this.imageInfo != null && this.imageInfo.length > 0) {
        for (int i = 0; i < this.imageInfo.length; i++) {
          dg.model.nano.MatrixCommon.EAImage element = this.imageInfo[i];
          if (element != null) {
            output.writeMessage(3, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.ruleId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.ruleId);
      }
      if (this.eventType != dg.model.nano.MatrixCommon.Event_UNKNOWN) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(2, this.eventType);
      }
      if (this.imageInfo != null && this.imageInfo.length > 0) {
        for (int i = 0; i < this.imageInfo.length; i++) {
          dg.model.nano.MatrixCommon.EAImage element = this.imageInfo[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(3, element);
          }
        }
      }
      return size;
    }

    @Override
    public EventInfo mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.ruleId = input.readString();
            break;
          }
          case 16: {
            int value = input.readInt32();
            switch (value) {
              case dg.model.nano.MatrixCommon.Event_UNKNOWN:
              case dg.model.nano.MatrixCommon.Event_CROSSLINE:
              case dg.model.nano.MatrixCommon.Event_GETINAREA:
              case dg.model.nano.MatrixCommon.Event_GETOUTAREA:
                this.eventType = value;
                break;
            }
            break;
          }
          case 26: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 26);
            int i = this.imageInfo == null ? 0 : this.imageInfo.length;
            dg.model.nano.MatrixCommon.EAImage[] newArray =
                new dg.model.nano.MatrixCommon.EAImage[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.imageInfo, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new dg.model.nano.MatrixCommon.EAImage();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new dg.model.nano.MatrixCommon.EAImage();
            input.readMessage(newArray[i]);
            this.imageInfo = newArray;
            break;
          }
        }
      }
    }

    public static EventInfo parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new EventInfo(), data);
    }

    public static EventInfo parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new EventInfo().mergeFrom(input);
    }
  }

  public static final class RecVehicle extends
      com.google.protobuf.nano.MessageNano {

    private static volatile RecVehicle[] _emptyArray;
    public static RecVehicle[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new RecVehicle[0];
          }
        }
      }
      return _emptyArray;
    }

    // int64 Id = 1;
    public long id;

    // .dg.model.CutboardImage Img = 2;
    public dg.model.nano.MatrixCommon.CutboardImage img;

    // string Features = 3;
    public java.lang.String features;

    // .dg.model.VehicleModelType ModelType = 4;
    public dg.model.nano.MatrixCommon.VehicleModelType modelType;

    // .dg.model.Color Color = 5;
    public dg.model.nano.MatrixCommon.Color color;

    // repeated .dg.model.VehicleSymbol Symbols = 6;
    public dg.model.nano.MatrixCommon.VehicleSymbol[] symbols;

    // repeated .dg.model.LicensePlate Plates = 7;
    public dg.model.nano.MatrixCommon.LicensePlate[] plates;

    // repeated .dg.model.Passenger Passengers = 8;
    public dg.model.nano.MatrixCommon.Passenger[] passengers;

    // repeated .dg.model.Attribute Attributes = 9;
    public dg.model.nano.MatrixCommon.Attribute[] attributes;

    // bool HasFace = 10;
    public boolean hasFace;

    // .dg.model.SrcMetadata Metadata = 64;
    public dg.model.nano.MatrixCommon.SrcMetadata metadata;

    // .dg.model.Image OriginImg = 65;
    public dg.model.nano.MatrixCommon.Image originImg;

    // repeated .dg.model.MatchedFace MatchedFaces = 66;
    public dg.model.nano.MatrixCommon.MatchedFace[] matchedFaces;

    // .dg.model.RecVehicle MatchedVehicle = 67;
    public dg.model.nano.MatrixCommon.RecVehicle matchedVehicle;

    // repeated .dg.model.VehicleDes VehicleBodyDes = 70;
    public dg.model.nano.MatrixCommon.VehicleDes[] vehicleBodyDes;

    // repeated .dg.model.Articles Articles = 80;
    public dg.model.nano.MatrixCommon.Articles[] articles;

    // repeated .dg.model.ExtInfo ExtInfos = 90;
    public dg.model.nano.MatrixCommon.ExtInfo[] extInfos;

    // string UId = 99;
    public java.lang.String uId;

    // string ReId = 100;
    public java.lang.String reId;

    // .dg.model.EventInfo EAEvent = 101;
    public dg.model.nano.MatrixCommon.EventInfo eAEvent;

    public RecVehicle() {
      clear();
    }

    public RecVehicle clear() {
      id = 0L;
      img = null;
      features = "";
      modelType = null;
      color = null;
      symbols = dg.model.nano.MatrixCommon.VehicleSymbol.emptyArray();
      plates = dg.model.nano.MatrixCommon.LicensePlate.emptyArray();
      passengers = dg.model.nano.MatrixCommon.Passenger.emptyArray();
      attributes = dg.model.nano.MatrixCommon.Attribute.emptyArray();
      hasFace = false;
      metadata = null;
      originImg = null;
      matchedFaces = dg.model.nano.MatrixCommon.MatchedFace.emptyArray();
      matchedVehicle = null;
      vehicleBodyDes = dg.model.nano.MatrixCommon.VehicleDes.emptyArray();
      articles = dg.model.nano.MatrixCommon.Articles.emptyArray();
      extInfos = dg.model.nano.MatrixCommon.ExtInfo.emptyArray();
      uId = "";
      reId = "";
      eAEvent = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.id != 0L) {
        output.writeInt64(1, this.id);
      }
      if (this.img != null) {
        output.writeMessage(2, this.img);
      }
      if (!this.features.equals("")) {
        output.writeString(3, this.features);
      }
      if (this.modelType != null) {
        output.writeMessage(4, this.modelType);
      }
      if (this.color != null) {
        output.writeMessage(5, this.color);
      }
      if (this.symbols != null && this.symbols.length > 0) {
        for (int i = 0; i < this.symbols.length; i++) {
          dg.model.nano.MatrixCommon.VehicleSymbol element = this.symbols[i];
          if (element != null) {
            output.writeMessage(6, element);
          }
        }
      }
      if (this.plates != null && this.plates.length > 0) {
        for (int i = 0; i < this.plates.length; i++) {
          dg.model.nano.MatrixCommon.LicensePlate element = this.plates[i];
          if (element != null) {
            output.writeMessage(7, element);
          }
        }
      }
      if (this.passengers != null && this.passengers.length > 0) {
        for (int i = 0; i < this.passengers.length; i++) {
          dg.model.nano.MatrixCommon.Passenger element = this.passengers[i];
          if (element != null) {
            output.writeMessage(8, element);
          }
        }
      }
      if (this.attributes != null && this.attributes.length > 0) {
        for (int i = 0; i < this.attributes.length; i++) {
          dg.model.nano.MatrixCommon.Attribute element = this.attributes[i];
          if (element != null) {
            output.writeMessage(9, element);
          }
        }
      }
      if (this.hasFace != false) {
        output.writeBool(10, this.hasFace);
      }
      if (this.metadata != null) {
        output.writeMessage(64, this.metadata);
      }
      if (this.originImg != null) {
        output.writeMessage(65, this.originImg);
      }
      if (this.matchedFaces != null && this.matchedFaces.length > 0) {
        for (int i = 0; i < this.matchedFaces.length; i++) {
          dg.model.nano.MatrixCommon.MatchedFace element = this.matchedFaces[i];
          if (element != null) {
            output.writeMessage(66, element);
          }
        }
      }
      if (this.matchedVehicle != null) {
        output.writeMessage(67, this.matchedVehicle);
      }
      if (this.vehicleBodyDes != null && this.vehicleBodyDes.length > 0) {
        for (int i = 0; i < this.vehicleBodyDes.length; i++) {
          dg.model.nano.MatrixCommon.VehicleDes element = this.vehicleBodyDes[i];
          if (element != null) {
            output.writeMessage(70, element);
          }
        }
      }
      if (this.articles != null && this.articles.length > 0) {
        for (int i = 0; i < this.articles.length; i++) {
          dg.model.nano.MatrixCommon.Articles element = this.articles[i];
          if (element != null) {
            output.writeMessage(80, element);
          }
        }
      }
      if (this.extInfos != null && this.extInfos.length > 0) {
        for (int i = 0; i < this.extInfos.length; i++) {
          dg.model.nano.MatrixCommon.ExtInfo element = this.extInfos[i];
          if (element != null) {
            output.writeMessage(90, element);
          }
        }
      }
      if (!this.uId.equals("")) {
        output.writeString(99, this.uId);
      }
      if (!this.reId.equals("")) {
        output.writeString(100, this.reId);
      }
      if (this.eAEvent != null) {
        output.writeMessage(101, this.eAEvent);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.id != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(1, this.id);
      }
      if (this.img != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(2, this.img);
      }
      if (!this.features.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.features);
      }
      if (this.modelType != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(4, this.modelType);
      }
      if (this.color != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(5, this.color);
      }
      if (this.symbols != null && this.symbols.length > 0) {
        for (int i = 0; i < this.symbols.length; i++) {
          dg.model.nano.MatrixCommon.VehicleSymbol element = this.symbols[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(6, element);
          }
        }
      }
      if (this.plates != null && this.plates.length > 0) {
        for (int i = 0; i < this.plates.length; i++) {
          dg.model.nano.MatrixCommon.LicensePlate element = this.plates[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(7, element);
          }
        }
      }
      if (this.passengers != null && this.passengers.length > 0) {
        for (int i = 0; i < this.passengers.length; i++) {
          dg.model.nano.MatrixCommon.Passenger element = this.passengers[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(8, element);
          }
        }
      }
      if (this.attributes != null && this.attributes.length > 0) {
        for (int i = 0; i < this.attributes.length; i++) {
          dg.model.nano.MatrixCommon.Attribute element = this.attributes[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(9, element);
          }
        }
      }
      if (this.hasFace != false) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(10, this.hasFace);
      }
      if (this.metadata != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(64, this.metadata);
      }
      if (this.originImg != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(65, this.originImg);
      }
      if (this.matchedFaces != null && this.matchedFaces.length > 0) {
        for (int i = 0; i < this.matchedFaces.length; i++) {
          dg.model.nano.MatrixCommon.MatchedFace element = this.matchedFaces[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(66, element);
          }
        }
      }
      if (this.matchedVehicle != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(67, this.matchedVehicle);
      }
      if (this.vehicleBodyDes != null && this.vehicleBodyDes.length > 0) {
        for (int i = 0; i < this.vehicleBodyDes.length; i++) {
          dg.model.nano.MatrixCommon.VehicleDes element = this.vehicleBodyDes[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(70, element);
          }
        }
      }
      if (this.articles != null && this.articles.length > 0) {
        for (int i = 0; i < this.articles.length; i++) {
          dg.model.nano.MatrixCommon.Articles element = this.articles[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(80, element);
          }
        }
      }
      if (this.extInfos != null && this.extInfos.length > 0) {
        for (int i = 0; i < this.extInfos.length; i++) {
          dg.model.nano.MatrixCommon.ExtInfo element = this.extInfos[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(90, element);
          }
        }
      }
      if (!this.uId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(99, this.uId);
      }
      if (!this.reId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(100, this.reId);
      }
      if (this.eAEvent != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(101, this.eAEvent);
      }
      return size;
    }

    @Override
    public RecVehicle mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.id = input.readInt64();
            break;
          }
          case 18: {
            if (this.img == null) {
              this.img = new dg.model.nano.MatrixCommon.CutboardImage();
            }
            input.readMessage(this.img);
            break;
          }
          case 26: {
            this.features = input.readString();
            break;
          }
          case 34: {
            if (this.modelType == null) {
              this.modelType = new dg.model.nano.MatrixCommon.VehicleModelType();
            }
            input.readMessage(this.modelType);
            break;
          }
          case 42: {
            if (this.color == null) {
              this.color = new dg.model.nano.MatrixCommon.Color();
            }
            input.readMessage(this.color);
            break;
          }
          case 50: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 50);
            int i = this.symbols == null ? 0 : this.symbols.length;
            dg.model.nano.MatrixCommon.VehicleSymbol[] newArray =
                new dg.model.nano.MatrixCommon.VehicleSymbol[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.symbols, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new dg.model.nano.MatrixCommon.VehicleSymbol();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new dg.model.nano.MatrixCommon.VehicleSymbol();
            input.readMessage(newArray[i]);
            this.symbols = newArray;
            break;
          }
          case 58: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 58);
            int i = this.plates == null ? 0 : this.plates.length;
            dg.model.nano.MatrixCommon.LicensePlate[] newArray =
                new dg.model.nano.MatrixCommon.LicensePlate[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.plates, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new dg.model.nano.MatrixCommon.LicensePlate();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new dg.model.nano.MatrixCommon.LicensePlate();
            input.readMessage(newArray[i]);
            this.plates = newArray;
            break;
          }
          case 66: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 66);
            int i = this.passengers == null ? 0 : this.passengers.length;
            dg.model.nano.MatrixCommon.Passenger[] newArray =
                new dg.model.nano.MatrixCommon.Passenger[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.passengers, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new dg.model.nano.MatrixCommon.Passenger();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new dg.model.nano.MatrixCommon.Passenger();
            input.readMessage(newArray[i]);
            this.passengers = newArray;
            break;
          }
          case 74: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 74);
            int i = this.attributes == null ? 0 : this.attributes.length;
            dg.model.nano.MatrixCommon.Attribute[] newArray =
                new dg.model.nano.MatrixCommon.Attribute[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.attributes, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new dg.model.nano.MatrixCommon.Attribute();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new dg.model.nano.MatrixCommon.Attribute();
            input.readMessage(newArray[i]);
            this.attributes = newArray;
            break;
          }
          case 80: {
            this.hasFace = input.readBool();
            break;
          }
          case 514: {
            if (this.metadata == null) {
              this.metadata = new dg.model.nano.MatrixCommon.SrcMetadata();
            }
            input.readMessage(this.metadata);
            break;
          }
          case 522: {
            if (this.originImg == null) {
              this.originImg = new dg.model.nano.MatrixCommon.Image();
            }
            input.readMessage(this.originImg);
            break;
          }
          case 530: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 530);
            int i = this.matchedFaces == null ? 0 : this.matchedFaces.length;
            dg.model.nano.MatrixCommon.MatchedFace[] newArray =
                new dg.model.nano.MatrixCommon.MatchedFace[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.matchedFaces, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new dg.model.nano.MatrixCommon.MatchedFace();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new dg.model.nano.MatrixCommon.MatchedFace();
            input.readMessage(newArray[i]);
            this.matchedFaces = newArray;
            break;
          }
          case 538: {
            if (this.matchedVehicle == null) {
              this.matchedVehicle = new dg.model.nano.MatrixCommon.RecVehicle();
            }
            input.readMessage(this.matchedVehicle);
            break;
          }
          case 562: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 562);
            int i = this.vehicleBodyDes == null ? 0 : this.vehicleBodyDes.length;
            dg.model.nano.MatrixCommon.VehicleDes[] newArray =
                new dg.model.nano.MatrixCommon.VehicleDes[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.vehicleBodyDes, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new dg.model.nano.MatrixCommon.VehicleDes();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new dg.model.nano.MatrixCommon.VehicleDes();
            input.readMessage(newArray[i]);
            this.vehicleBodyDes = newArray;
            break;
          }
          case 642: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 642);
            int i = this.articles == null ? 0 : this.articles.length;
            dg.model.nano.MatrixCommon.Articles[] newArray =
                new dg.model.nano.MatrixCommon.Articles[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.articles, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new dg.model.nano.MatrixCommon.Articles();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new dg.model.nano.MatrixCommon.Articles();
            input.readMessage(newArray[i]);
            this.articles = newArray;
            break;
          }
          case 722: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 722);
            int i = this.extInfos == null ? 0 : this.extInfos.length;
            dg.model.nano.MatrixCommon.ExtInfo[] newArray =
                new dg.model.nano.MatrixCommon.ExtInfo[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.extInfos, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new dg.model.nano.MatrixCommon.ExtInfo();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new dg.model.nano.MatrixCommon.ExtInfo();
            input.readMessage(newArray[i]);
            this.extInfos = newArray;
            break;
          }
          case 794: {
            this.uId = input.readString();
            break;
          }
          case 802: {
            this.reId = input.readString();
            break;
          }
          case 810: {
            if (this.eAEvent == null) {
              this.eAEvent = new dg.model.nano.MatrixCommon.EventInfo();
            }
            input.readMessage(this.eAEvent);
            break;
          }
        }
      }
    }

    public static RecVehicle parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new RecVehicle(), data);
    }

    public static RecVehicle parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new RecVehicle().mergeFrom(input);
    }
  }

  public static final class RecNonMotorVehicle extends
      com.google.protobuf.nano.MessageNano {

    private static volatile RecNonMotorVehicle[] _emptyArray;
    public static RecNonMotorVehicle[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new RecNonMotorVehicle[0];
          }
        }
      }
      return _emptyArray;
    }

    // int64 Id = 1;
    public long id;

    // .dg.model.CutboardImage Img = 2;
    public dg.model.nano.MatrixCommon.CutboardImage img;

    // repeated .dg.model.Attribute Attributes = 3;
    public dg.model.nano.MatrixCommon.Attribute[] attributes;

    // repeated .dg.model.Passenger Passengers = 4;
    public dg.model.nano.MatrixCommon.Passenger[] passengers;

    // string Features = 5;
    public java.lang.String features;

    // .dg.model.LicensePlate Plate = 6;
    public dg.model.nano.MatrixCommon.LicensePlate plate;

    // bool HasFace = 7;
    public boolean hasFace;

    // .dg.model.SrcMetadata Metadata = 64;
    public dg.model.nano.MatrixCommon.SrcMetadata metadata;

    // .dg.model.Image OriginImg = 65;
    public dg.model.nano.MatrixCommon.Image originImg;

    // repeated .dg.model.MatchedFace MatchedFaces = 66;
    public dg.model.nano.MatrixCommon.MatchedFace[] matchedFaces;

    // .dg.model.RecNonMotorVehicle MatchedNonmotor = 67;
    public dg.model.nano.MatrixCommon.RecNonMotorVehicle matchedNonmotor;

    // string UId = 99;
    public java.lang.String uId;

    // string ReId = 100;
    public java.lang.String reId;

    // .dg.model.EventInfo EAEvent = 101;
    public dg.model.nano.MatrixCommon.EventInfo eAEvent;

    public RecNonMotorVehicle() {
      clear();
    }

    public RecNonMotorVehicle clear() {
      id = 0L;
      img = null;
      attributes = dg.model.nano.MatrixCommon.Attribute.emptyArray();
      passengers = dg.model.nano.MatrixCommon.Passenger.emptyArray();
      features = "";
      plate = null;
      hasFace = false;
      metadata = null;
      originImg = null;
      matchedFaces = dg.model.nano.MatrixCommon.MatchedFace.emptyArray();
      matchedNonmotor = null;
      uId = "";
      reId = "";
      eAEvent = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.id != 0L) {
        output.writeInt64(1, this.id);
      }
      if (this.img != null) {
        output.writeMessage(2, this.img);
      }
      if (this.attributes != null && this.attributes.length > 0) {
        for (int i = 0; i < this.attributes.length; i++) {
          dg.model.nano.MatrixCommon.Attribute element = this.attributes[i];
          if (element != null) {
            output.writeMessage(3, element);
          }
        }
      }
      if (this.passengers != null && this.passengers.length > 0) {
        for (int i = 0; i < this.passengers.length; i++) {
          dg.model.nano.MatrixCommon.Passenger element = this.passengers[i];
          if (element != null) {
            output.writeMessage(4, element);
          }
        }
      }
      if (!this.features.equals("")) {
        output.writeString(5, this.features);
      }
      if (this.plate != null) {
        output.writeMessage(6, this.plate);
      }
      if (this.hasFace != false) {
        output.writeBool(7, this.hasFace);
      }
      if (this.metadata != null) {
        output.writeMessage(64, this.metadata);
      }
      if (this.originImg != null) {
        output.writeMessage(65, this.originImg);
      }
      if (this.matchedFaces != null && this.matchedFaces.length > 0) {
        for (int i = 0; i < this.matchedFaces.length; i++) {
          dg.model.nano.MatrixCommon.MatchedFace element = this.matchedFaces[i];
          if (element != null) {
            output.writeMessage(66, element);
          }
        }
      }
      if (this.matchedNonmotor != null) {
        output.writeMessage(67, this.matchedNonmotor);
      }
      if (!this.uId.equals("")) {
        output.writeString(99, this.uId);
      }
      if (!this.reId.equals("")) {
        output.writeString(100, this.reId);
      }
      if (this.eAEvent != null) {
        output.writeMessage(101, this.eAEvent);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.id != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(1, this.id);
      }
      if (this.img != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(2, this.img);
      }
      if (this.attributes != null && this.attributes.length > 0) {
        for (int i = 0; i < this.attributes.length; i++) {
          dg.model.nano.MatrixCommon.Attribute element = this.attributes[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(3, element);
          }
        }
      }
      if (this.passengers != null && this.passengers.length > 0) {
        for (int i = 0; i < this.passengers.length; i++) {
          dg.model.nano.MatrixCommon.Passenger element = this.passengers[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(4, element);
          }
        }
      }
      if (!this.features.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.features);
      }
      if (this.plate != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(6, this.plate);
      }
      if (this.hasFace != false) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(7, this.hasFace);
      }
      if (this.metadata != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(64, this.metadata);
      }
      if (this.originImg != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(65, this.originImg);
      }
      if (this.matchedFaces != null && this.matchedFaces.length > 0) {
        for (int i = 0; i < this.matchedFaces.length; i++) {
          dg.model.nano.MatrixCommon.MatchedFace element = this.matchedFaces[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(66, element);
          }
        }
      }
      if (this.matchedNonmotor != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(67, this.matchedNonmotor);
      }
      if (!this.uId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(99, this.uId);
      }
      if (!this.reId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(100, this.reId);
      }
      if (this.eAEvent != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(101, this.eAEvent);
      }
      return size;
    }

    @Override
    public RecNonMotorVehicle mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.id = input.readInt64();
            break;
          }
          case 18: {
            if (this.img == null) {
              this.img = new dg.model.nano.MatrixCommon.CutboardImage();
            }
            input.readMessage(this.img);
            break;
          }
          case 26: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 26);
            int i = this.attributes == null ? 0 : this.attributes.length;
            dg.model.nano.MatrixCommon.Attribute[] newArray =
                new dg.model.nano.MatrixCommon.Attribute[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.attributes, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new dg.model.nano.MatrixCommon.Attribute();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new dg.model.nano.MatrixCommon.Attribute();
            input.readMessage(newArray[i]);
            this.attributes = newArray;
            break;
          }
          case 34: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 34);
            int i = this.passengers == null ? 0 : this.passengers.length;
            dg.model.nano.MatrixCommon.Passenger[] newArray =
                new dg.model.nano.MatrixCommon.Passenger[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.passengers, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new dg.model.nano.MatrixCommon.Passenger();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new dg.model.nano.MatrixCommon.Passenger();
            input.readMessage(newArray[i]);
            this.passengers = newArray;
            break;
          }
          case 42: {
            this.features = input.readString();
            break;
          }
          case 50: {
            if (this.plate == null) {
              this.plate = new dg.model.nano.MatrixCommon.LicensePlate();
            }
            input.readMessage(this.plate);
            break;
          }
          case 56: {
            this.hasFace = input.readBool();
            break;
          }
          case 514: {
            if (this.metadata == null) {
              this.metadata = new dg.model.nano.MatrixCommon.SrcMetadata();
            }
            input.readMessage(this.metadata);
            break;
          }
          case 522: {
            if (this.originImg == null) {
              this.originImg = new dg.model.nano.MatrixCommon.Image();
            }
            input.readMessage(this.originImg);
            break;
          }
          case 530: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 530);
            int i = this.matchedFaces == null ? 0 : this.matchedFaces.length;
            dg.model.nano.MatrixCommon.MatchedFace[] newArray =
                new dg.model.nano.MatrixCommon.MatchedFace[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.matchedFaces, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new dg.model.nano.MatrixCommon.MatchedFace();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new dg.model.nano.MatrixCommon.MatchedFace();
            input.readMessage(newArray[i]);
            this.matchedFaces = newArray;
            break;
          }
          case 538: {
            if (this.matchedNonmotor == null) {
              this.matchedNonmotor = new dg.model.nano.MatrixCommon.RecNonMotorVehicle();
            }
            input.readMessage(this.matchedNonmotor);
            break;
          }
          case 794: {
            this.uId = input.readString();
            break;
          }
          case 802: {
            this.reId = input.readString();
            break;
          }
          case 810: {
            if (this.eAEvent == null) {
              this.eAEvent = new dg.model.nano.MatrixCommon.EventInfo();
            }
            input.readMessage(this.eAEvent);
            break;
          }
        }
      }
    }

    public static RecNonMotorVehicle parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new RecNonMotorVehicle(), data);
    }

    public static RecNonMotorVehicle parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new RecNonMotorVehicle().mergeFrom(input);
    }
  }

  public static final class Passenger extends
      com.google.protobuf.nano.MessageNano {

    private static volatile Passenger[] _emptyArray;
    public static Passenger[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Passenger[0];
          }
        }
      }
      return _emptyArray;
    }

    // int64 Id = 1;
    public long id;

    // .dg.model.RecFace Face = 2;
    public dg.model.nano.MatrixCommon.RecFace face;

    // bool Driver = 3;
    public boolean driver;

    // .dg.model.CutboardImage Img = 4;
    public dg.model.nano.MatrixCommon.CutboardImage img;

    // int32 PhoneFlag = 5;
    public int phoneFlag;

    // int32 BeltFlag = 6;
    public int beltFlag;

    // float PhoneConfidence = 7;
    public float phoneConfidence;

    // float BeltConfidence = 8;
    public float beltConfidence;

    // repeated .dg.model.Attribute Attributes = 9;
    public dg.model.nano.MatrixCommon.Attribute[] attributes;

    // int32 FacecoverFlag = 10;
    public int facecoverFlag;

    // float FacecoverConfidence = 11;
    public float facecoverConfidence;

    // int32 SmokingFlag = 20;
    public int smokingFlag;

    // float SmokingConfidence = 21;
    public float smokingConfidence;

    public Passenger() {
      clear();
    }

    public Passenger clear() {
      id = 0L;
      face = null;
      driver = false;
      img = null;
      phoneFlag = 0;
      beltFlag = 0;
      phoneConfidence = 0F;
      beltConfidence = 0F;
      attributes = dg.model.nano.MatrixCommon.Attribute.emptyArray();
      facecoverFlag = 0;
      facecoverConfidence = 0F;
      smokingFlag = 0;
      smokingConfidence = 0F;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.id != 0L) {
        output.writeInt64(1, this.id);
      }
      if (this.face != null) {
        output.writeMessage(2, this.face);
      }
      if (this.driver != false) {
        output.writeBool(3, this.driver);
      }
      if (this.img != null) {
        output.writeMessage(4, this.img);
      }
      if (this.phoneFlag != 0) {
        output.writeInt32(5, this.phoneFlag);
      }
      if (this.beltFlag != 0) {
        output.writeInt32(6, this.beltFlag);
      }
      if (java.lang.Float.floatToIntBits(this.phoneConfidence)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(7, this.phoneConfidence);
      }
      if (java.lang.Float.floatToIntBits(this.beltConfidence)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(8, this.beltConfidence);
      }
      if (this.attributes != null && this.attributes.length > 0) {
        for (int i = 0; i < this.attributes.length; i++) {
          dg.model.nano.MatrixCommon.Attribute element = this.attributes[i];
          if (element != null) {
            output.writeMessage(9, element);
          }
        }
      }
      if (this.facecoverFlag != 0) {
        output.writeInt32(10, this.facecoverFlag);
      }
      if (java.lang.Float.floatToIntBits(this.facecoverConfidence)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(11, this.facecoverConfidence);
      }
      if (this.smokingFlag != 0) {
        output.writeInt32(20, this.smokingFlag);
      }
      if (java.lang.Float.floatToIntBits(this.smokingConfidence)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(21, this.smokingConfidence);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.id != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(1, this.id);
      }
      if (this.face != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(2, this.face);
      }
      if (this.driver != false) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(3, this.driver);
      }
      if (this.img != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(4, this.img);
      }
      if (this.phoneFlag != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(5, this.phoneFlag);
      }
      if (this.beltFlag != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(6, this.beltFlag);
      }
      if (java.lang.Float.floatToIntBits(this.phoneConfidence)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(7, this.phoneConfidence);
      }
      if (java.lang.Float.floatToIntBits(this.beltConfidence)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(8, this.beltConfidence);
      }
      if (this.attributes != null && this.attributes.length > 0) {
        for (int i = 0; i < this.attributes.length; i++) {
          dg.model.nano.MatrixCommon.Attribute element = this.attributes[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(9, element);
          }
        }
      }
      if (this.facecoverFlag != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(10, this.facecoverFlag);
      }
      if (java.lang.Float.floatToIntBits(this.facecoverConfidence)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(11, this.facecoverConfidence);
      }
      if (this.smokingFlag != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(20, this.smokingFlag);
      }
      if (java.lang.Float.floatToIntBits(this.smokingConfidence)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(21, this.smokingConfidence);
      }
      return size;
    }

    @Override
    public Passenger mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.id = input.readInt64();
            break;
          }
          case 18: {
            if (this.face == null) {
              this.face = new dg.model.nano.MatrixCommon.RecFace();
            }
            input.readMessage(this.face);
            break;
          }
          case 24: {
            this.driver = input.readBool();
            break;
          }
          case 34: {
            if (this.img == null) {
              this.img = new dg.model.nano.MatrixCommon.CutboardImage();
            }
            input.readMessage(this.img);
            break;
          }
          case 40: {
            this.phoneFlag = input.readInt32();
            break;
          }
          case 48: {
            this.beltFlag = input.readInt32();
            break;
          }
          case 61: {
            this.phoneConfidence = input.readFloat();
            break;
          }
          case 69: {
            this.beltConfidence = input.readFloat();
            break;
          }
          case 74: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 74);
            int i = this.attributes == null ? 0 : this.attributes.length;
            dg.model.nano.MatrixCommon.Attribute[] newArray =
                new dg.model.nano.MatrixCommon.Attribute[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.attributes, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new dg.model.nano.MatrixCommon.Attribute();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new dg.model.nano.MatrixCommon.Attribute();
            input.readMessage(newArray[i]);
            this.attributes = newArray;
            break;
          }
          case 80: {
            this.facecoverFlag = input.readInt32();
            break;
          }
          case 93: {
            this.facecoverConfidence = input.readFloat();
            break;
          }
          case 160: {
            this.smokingFlag = input.readInt32();
            break;
          }
          case 173: {
            this.smokingConfidence = input.readFloat();
            break;
          }
        }
      }
    }

    public static Passenger parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Passenger(), data);
    }

    public static Passenger parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Passenger().mergeFrom(input);
    }
  }

  public static final class RecPedestrian extends
      com.google.protobuf.nano.MessageNano {

    private static volatile RecPedestrian[] _emptyArray;
    public static RecPedestrian[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new RecPedestrian[0];
          }
        }
      }
      return _emptyArray;
    }

    // int64 Id = 1;
    public long id;

    // .dg.model.CutboardImage Img = 2;
    public dg.model.nano.MatrixCommon.CutboardImage img;

    // float Confidence = 3;
    public float confidence;

    // .dg.model.PeopleAttr PedesAttr = 4;
    public dg.model.nano.MatrixCommon.PeopleAttr pedesAttr;

    // .dg.model.RecFace Face = 5;
    public dg.model.nano.MatrixCommon.RecFace face;

    // string Features = 6;
    public java.lang.String features;

    // bool HasFace = 17;
    public boolean hasFace;

    // .dg.model.SrcMetadata Metadata = 64;
    public dg.model.nano.MatrixCommon.SrcMetadata metadata;

    // .dg.model.Image OriginImg = 65;
    public dg.model.nano.MatrixCommon.Image originImg;

    // .dg.model.RecFace MatchedFace = 66;
    public dg.model.nano.MatrixCommon.RecFace matchedFace;

    // .dg.model.RecPedestrian MatchedPedestrian = 67;
    public dg.model.nano.MatrixCommon.RecPedestrian matchedPedestrian;

    // string UId = 99;
    public java.lang.String uId;

    // string ReId = 100;
    public java.lang.String reId;

    // .dg.model.EventInfo EAEvent = 101;
    public dg.model.nano.MatrixCommon.EventInfo eAEvent;

    public RecPedestrian() {
      clear();
    }

    public RecPedestrian clear() {
      id = 0L;
      img = null;
      confidence = 0F;
      pedesAttr = null;
      face = null;
      features = "";
      hasFace = false;
      metadata = null;
      originImg = null;
      matchedFace = null;
      matchedPedestrian = null;
      uId = "";
      reId = "";
      eAEvent = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.id != 0L) {
        output.writeInt64(1, this.id);
      }
      if (this.img != null) {
        output.writeMessage(2, this.img);
      }
      if (java.lang.Float.floatToIntBits(this.confidence)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(3, this.confidence);
      }
      if (this.pedesAttr != null) {
        output.writeMessage(4, this.pedesAttr);
      }
      if (this.face != null) {
        output.writeMessage(5, this.face);
      }
      if (!this.features.equals("")) {
        output.writeString(6, this.features);
      }
      if (this.hasFace != false) {
        output.writeBool(17, this.hasFace);
      }
      if (this.metadata != null) {
        output.writeMessage(64, this.metadata);
      }
      if (this.originImg != null) {
        output.writeMessage(65, this.originImg);
      }
      if (this.matchedFace != null) {
        output.writeMessage(66, this.matchedFace);
      }
      if (this.matchedPedestrian != null) {
        output.writeMessage(67, this.matchedPedestrian);
      }
      if (!this.uId.equals("")) {
        output.writeString(99, this.uId);
      }
      if (!this.reId.equals("")) {
        output.writeString(100, this.reId);
      }
      if (this.eAEvent != null) {
        output.writeMessage(101, this.eAEvent);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.id != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt64Size(1, this.id);
      }
      if (this.img != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(2, this.img);
      }
      if (java.lang.Float.floatToIntBits(this.confidence)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(3, this.confidence);
      }
      if (this.pedesAttr != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(4, this.pedesAttr);
      }
      if (this.face != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(5, this.face);
      }
      if (!this.features.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(6, this.features);
      }
      if (this.hasFace != false) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(17, this.hasFace);
      }
      if (this.metadata != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(64, this.metadata);
      }
      if (this.originImg != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(65, this.originImg);
      }
      if (this.matchedFace != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(66, this.matchedFace);
      }
      if (this.matchedPedestrian != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(67, this.matchedPedestrian);
      }
      if (!this.uId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(99, this.uId);
      }
      if (!this.reId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(100, this.reId);
      }
      if (this.eAEvent != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(101, this.eAEvent);
      }
      return size;
    }

    @Override
    public RecPedestrian mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.id = input.readInt64();
            break;
          }
          case 18: {
            if (this.img == null) {
              this.img = new dg.model.nano.MatrixCommon.CutboardImage();
            }
            input.readMessage(this.img);
            break;
          }
          case 29: {
            this.confidence = input.readFloat();
            break;
          }
          case 34: {
            if (this.pedesAttr == null) {
              this.pedesAttr = new dg.model.nano.MatrixCommon.PeopleAttr();
            }
            input.readMessage(this.pedesAttr);
            break;
          }
          case 42: {
            if (this.face == null) {
              this.face = new dg.model.nano.MatrixCommon.RecFace();
            }
            input.readMessage(this.face);
            break;
          }
          case 50: {
            this.features = input.readString();
            break;
          }
          case 136: {
            this.hasFace = input.readBool();
            break;
          }
          case 514: {
            if (this.metadata == null) {
              this.metadata = new dg.model.nano.MatrixCommon.SrcMetadata();
            }
            input.readMessage(this.metadata);
            break;
          }
          case 522: {
            if (this.originImg == null) {
              this.originImg = new dg.model.nano.MatrixCommon.Image();
            }
            input.readMessage(this.originImg);
            break;
          }
          case 530: {
            if (this.matchedFace == null) {
              this.matchedFace = new dg.model.nano.MatrixCommon.RecFace();
            }
            input.readMessage(this.matchedFace);
            break;
          }
          case 538: {
            if (this.matchedPedestrian == null) {
              this.matchedPedestrian = new dg.model.nano.MatrixCommon.RecPedestrian();
            }
            input.readMessage(this.matchedPedestrian);
            break;
          }
          case 794: {
            this.uId = input.readString();
            break;
          }
          case 802: {
            this.reId = input.readString();
            break;
          }
          case 810: {
            if (this.eAEvent == null) {
              this.eAEvent = new dg.model.nano.MatrixCommon.EventInfo();
            }
            input.readMessage(this.eAEvent);
            break;
          }
        }
      }
    }

    public static RecPedestrian parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new RecPedestrian(), data);
    }

    public static RecPedestrian parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new RecPedestrian().mergeFrom(input);
    }
  }

  public static final class VehicleModelType extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VehicleModelType[] _emptyArray;
    public static VehicleModelType[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VehicleModelType[0];
          }
        }
      }
      return _emptyArray;
    }

    // int32 StyleId = 1;
    public int styleId;

    // string Style = 2;
    public java.lang.String style;

    // float StyleConfidence = 3;
    public float styleConfidence;

    // int32 BrandId = 4;
    public int brandId;

    // string Brand = 5;
    public java.lang.String brand;

    // float BrandConfidence = 6;
    public float brandConfidence;

    // int32 SubBrandId = 7;
    public int subBrandId;

    // string SubBrand = 8;
    public java.lang.String subBrand;

    // float SubBrandConfidence = 9;
    public float subBrandConfidence;

    // int32 ModelYearId = 10;
    public int modelYearId;

    // string ModelYear = 11;
    public java.lang.String modelYear;

    // float ModelYearConfidence = 12;
    public float modelYearConfidence;

    // int32 PoseId = 13;
    public int poseId;

    // string Pose = 14;
    public java.lang.String pose;

    // float PoseConfidence = 15;
    public float poseConfidence;

    public VehicleModelType() {
      clear();
    }

    public VehicleModelType clear() {
      styleId = 0;
      style = "";
      styleConfidence = 0F;
      brandId = 0;
      brand = "";
      brandConfidence = 0F;
      subBrandId = 0;
      subBrand = "";
      subBrandConfidence = 0F;
      modelYearId = 0;
      modelYear = "";
      modelYearConfidence = 0F;
      poseId = 0;
      pose = "";
      poseConfidence = 0F;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.styleId != 0) {
        output.writeInt32(1, this.styleId);
      }
      if (!this.style.equals("")) {
        output.writeString(2, this.style);
      }
      if (java.lang.Float.floatToIntBits(this.styleConfidence)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(3, this.styleConfidence);
      }
      if (this.brandId != 0) {
        output.writeInt32(4, this.brandId);
      }
      if (!this.brand.equals("")) {
        output.writeString(5, this.brand);
      }
      if (java.lang.Float.floatToIntBits(this.brandConfidence)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(6, this.brandConfidence);
      }
      if (this.subBrandId != 0) {
        output.writeInt32(7, this.subBrandId);
      }
      if (!this.subBrand.equals("")) {
        output.writeString(8, this.subBrand);
      }
      if (java.lang.Float.floatToIntBits(this.subBrandConfidence)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(9, this.subBrandConfidence);
      }
      if (this.modelYearId != 0) {
        output.writeInt32(10, this.modelYearId);
      }
      if (!this.modelYear.equals("")) {
        output.writeString(11, this.modelYear);
      }
      if (java.lang.Float.floatToIntBits(this.modelYearConfidence)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(12, this.modelYearConfidence);
      }
      if (this.poseId != 0) {
        output.writeInt32(13, this.poseId);
      }
      if (!this.pose.equals("")) {
        output.writeString(14, this.pose);
      }
      if (java.lang.Float.floatToIntBits(this.poseConfidence)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(15, this.poseConfidence);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.styleId != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.styleId);
      }
      if (!this.style.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.style);
      }
      if (java.lang.Float.floatToIntBits(this.styleConfidence)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(3, this.styleConfidence);
      }
      if (this.brandId != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(4, this.brandId);
      }
      if (!this.brand.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.brand);
      }
      if (java.lang.Float.floatToIntBits(this.brandConfidence)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(6, this.brandConfidence);
      }
      if (this.subBrandId != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(7, this.subBrandId);
      }
      if (!this.subBrand.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(8, this.subBrand);
      }
      if (java.lang.Float.floatToIntBits(this.subBrandConfidence)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(9, this.subBrandConfidence);
      }
      if (this.modelYearId != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(10, this.modelYearId);
      }
      if (!this.modelYear.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(11, this.modelYear);
      }
      if (java.lang.Float.floatToIntBits(this.modelYearConfidence)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(12, this.modelYearConfidence);
      }
      if (this.poseId != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(13, this.poseId);
      }
      if (!this.pose.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(14, this.pose);
      }
      if (java.lang.Float.floatToIntBits(this.poseConfidence)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(15, this.poseConfidence);
      }
      return size;
    }

    @Override
    public VehicleModelType mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.styleId = input.readInt32();
            break;
          }
          case 18: {
            this.style = input.readString();
            break;
          }
          case 29: {
            this.styleConfidence = input.readFloat();
            break;
          }
          case 32: {
            this.brandId = input.readInt32();
            break;
          }
          case 42: {
            this.brand = input.readString();
            break;
          }
          case 53: {
            this.brandConfidence = input.readFloat();
            break;
          }
          case 56: {
            this.subBrandId = input.readInt32();
            break;
          }
          case 66: {
            this.subBrand = input.readString();
            break;
          }
          case 77: {
            this.subBrandConfidence = input.readFloat();
            break;
          }
          case 80: {
            this.modelYearId = input.readInt32();
            break;
          }
          case 90: {
            this.modelYear = input.readString();
            break;
          }
          case 101: {
            this.modelYearConfidence = input.readFloat();
            break;
          }
          case 104: {
            this.poseId = input.readInt32();
            break;
          }
          case 114: {
            this.pose = input.readString();
            break;
          }
          case 125: {
            this.poseConfidence = input.readFloat();
            break;
          }
        }
      }
    }

    public static VehicleModelType parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VehicleModelType(), data);
    }

    public static VehicleModelType parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VehicleModelType().mergeFrom(input);
    }
  }

  public static final class LicensePlate extends
      com.google.protobuf.nano.MessageNano {

    private static volatile LicensePlate[] _emptyArray;
    public static LicensePlate[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new LicensePlate[0];
          }
        }
      }
      return _emptyArray;
    }

    // string PlateText = 1;
    public java.lang.String plateText;

    // .dg.model.Color Color = 2;
    public dg.model.nano.MatrixCommon.Color color;

    // int32 StyleId = 3;
    public int styleId;

    // string StyleName = 4;
    public java.lang.String styleName;

    // float Confidence = 5;
    public float confidence;

    // .dg.model.Cutboard Cutboard = 6;
    public dg.model.nano.MatrixCommon.Cutboard cutboard;

    // float LocalProvinceConfidence = 7;
    public float localProvinceConfidence;

    public LicensePlate() {
      clear();
    }

    public LicensePlate clear() {
      plateText = "";
      color = null;
      styleId = 0;
      styleName = "";
      confidence = 0F;
      cutboard = null;
      localProvinceConfidence = 0F;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.plateText.equals("")) {
        output.writeString(1, this.plateText);
      }
      if (this.color != null) {
        output.writeMessage(2, this.color);
      }
      if (this.styleId != 0) {
        output.writeInt32(3, this.styleId);
      }
      if (!this.styleName.equals("")) {
        output.writeString(4, this.styleName);
      }
      if (java.lang.Float.floatToIntBits(this.confidence)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(5, this.confidence);
      }
      if (this.cutboard != null) {
        output.writeMessage(6, this.cutboard);
      }
      if (java.lang.Float.floatToIntBits(this.localProvinceConfidence)
          != java.lang.Float.floatToIntBits(0F)) {
        output.writeFloat(7, this.localProvinceConfidence);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.plateText.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.plateText);
      }
      if (this.color != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(2, this.color);
      }
      if (this.styleId != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(3, this.styleId);
      }
      if (!this.styleName.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.styleName);
      }
      if (java.lang.Float.floatToIntBits(this.confidence)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(5, this.confidence);
      }
      if (this.cutboard != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(6, this.cutboard);
      }
      if (java.lang.Float.floatToIntBits(this.localProvinceConfidence)
          != java.lang.Float.floatToIntBits(0F)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeFloatSize(7, this.localProvinceConfidence);
      }
      return size;
    }

    @Override
    public LicensePlate mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.plateText = input.readString();
            break;
          }
          case 18: {
            if (this.color == null) {
              this.color = new dg.model.nano.MatrixCommon.Color();
            }
            input.readMessage(this.color);
            break;
          }
          case 24: {
            this.styleId = input.readInt32();
            break;
          }
          case 34: {
            this.styleName = input.readString();
            break;
          }
          case 45: {
            this.confidence = input.readFloat();
            break;
          }
          case 50: {
            if (this.cutboard == null) {
              this.cutboard = new dg.model.nano.MatrixCommon.Cutboard();
            }
            input.readMessage(this.cutboard);
            break;
          }
          case 61: {
            this.localProvinceConfidence = input.readFloat();
            break;
          }
        }
      }
    }

    public static LicensePlate parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new LicensePlate(), data);
    }

    public static LicensePlate parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new LicensePlate().mergeFrom(input);
    }
  }

  public static final class VehicleSymbol extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VehicleSymbol[] _emptyArray;
    public static VehicleSymbol[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VehicleSymbol[0];
          }
        }
      }
      return _emptyArray;
    }

    // int32 SymbolId = 1;
    public int symbolId;

    // string SymbolName = 2;
    public java.lang.String symbolName;

    // .dg.model.Cutboard Cutboard = 3;
    public dg.model.nano.MatrixCommon.Cutboard cutboard;

    public VehicleSymbol() {
      clear();
    }

    public VehicleSymbol clear() {
      symbolId = 0;
      symbolName = "";
      cutboard = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.symbolId != 0) {
        output.writeInt32(1, this.symbolId);
      }
      if (!this.symbolName.equals("")) {
        output.writeString(2, this.symbolName);
      }
      if (this.cutboard != null) {
        output.writeMessage(3, this.cutboard);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.symbolId != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.symbolId);
      }
      if (!this.symbolName.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.symbolName);
      }
      if (this.cutboard != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(3, this.cutboard);
      }
      return size;
    }

    @Override
    public VehicleSymbol mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.symbolId = input.readInt32();
            break;
          }
          case 18: {
            this.symbolName = input.readString();
            break;
          }
          case 26: {
            if (this.cutboard == null) {
              this.cutboard = new dg.model.nano.MatrixCommon.Cutboard();
            }
            input.readMessage(this.cutboard);
            break;
          }
        }
      }
    }

    public static VehicleSymbol parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VehicleSymbol(), data);
    }

    public static VehicleSymbol parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VehicleSymbol().mergeFrom(input);
    }
  }

  public static final class VehicleDes extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VehicleDes[] _emptyArray;
    public static VehicleDes[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VehicleDes[0];
          }
        }
      }
      return _emptyArray;
    }

    // int32 VehicleBodyDescId = 1;
    public int vehicleBodyDescId;

    // string VehicleBodyDescName = 2;
    public java.lang.String vehicleBodyDescName;

    // .dg.model.Cutboard Cutboard = 3;
    public dg.model.nano.MatrixCommon.Cutboard cutboard;

    public VehicleDes() {
      clear();
    }

    public VehicleDes clear() {
      vehicleBodyDescId = 0;
      vehicleBodyDescName = "";
      cutboard = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.vehicleBodyDescId != 0) {
        output.writeInt32(1, this.vehicleBodyDescId);
      }
      if (!this.vehicleBodyDescName.equals("")) {
        output.writeString(2, this.vehicleBodyDescName);
      }
      if (this.cutboard != null) {
        output.writeMessage(3, this.cutboard);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.vehicleBodyDescId != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.vehicleBodyDescId);
      }
      if (!this.vehicleBodyDescName.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.vehicleBodyDescName);
      }
      if (this.cutboard != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(3, this.cutboard);
      }
      return size;
    }

    @Override
    public VehicleDes mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.vehicleBodyDescId = input.readInt32();
            break;
          }
          case 18: {
            this.vehicleBodyDescName = input.readString();
            break;
          }
          case 26: {
            if (this.cutboard == null) {
              this.cutboard = new dg.model.nano.MatrixCommon.Cutboard();
            }
            input.readMessage(this.cutboard);
            break;
          }
        }
      }
    }

    public static VehicleDes parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VehicleDes(), data);
    }

    public static VehicleDes parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VehicleDes().mergeFrom(input);
    }
  }

  public static final class ExtInfo extends
      com.google.protobuf.nano.MessageNano {

    private static volatile ExtInfo[] _emptyArray;
    public static ExtInfo[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ExtInfo[0];
          }
        }
      }
      return _emptyArray;
    }

    // string SName = 1;
    public java.lang.String sName;

    // .dg.model.Cutboard Cutboard = 2;
    public dg.model.nano.MatrixCommon.Cutboard cutboard;

    public ExtInfo() {
      clear();
    }

    public ExtInfo clear() {
      sName = "";
      cutboard = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.sName.equals("")) {
        output.writeString(1, this.sName);
      }
      if (this.cutboard != null) {
        output.writeMessage(2, this.cutboard);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.sName.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.sName);
      }
      if (this.cutboard != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(2, this.cutboard);
      }
      return size;
    }

    @Override
    public ExtInfo mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.sName = input.readString();
            break;
          }
          case 18: {
            if (this.cutboard == null) {
              this.cutboard = new dg.model.nano.MatrixCommon.Cutboard();
            }
            input.readMessage(this.cutboard);
            break;
          }
        }
      }
    }

    public static ExtInfo parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ExtInfo(), data);
    }

    public static ExtInfo parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ExtInfo().mergeFrom(input);
    }
  }

  public static final class Articles extends
      com.google.protobuf.nano.MessageNano {

    private static volatile Articles[] _emptyArray;
    public static Articles[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Articles[0];
          }
        }
      }
      return _emptyArray;
    }

    // int32 ArticleType = 1;
    public int articleType;

    // string ArticleTypeName = 2;
    public java.lang.String articleTypeName;

    // int32 ValueId = 3;
    public int valueId;

    // string ValueString = 4;
    public java.lang.String valueString;

    // .dg.model.Cutboard Cutboard = 5;
    public dg.model.nano.MatrixCommon.Cutboard cutboard;

    public Articles() {
      clear();
    }

    public Articles clear() {
      articleType = 0;
      articleTypeName = "";
      valueId = 0;
      valueString = "";
      cutboard = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.articleType != 0) {
        output.writeInt32(1, this.articleType);
      }
      if (!this.articleTypeName.equals("")) {
        output.writeString(2, this.articleTypeName);
      }
      if (this.valueId != 0) {
        output.writeInt32(3, this.valueId);
      }
      if (!this.valueString.equals("")) {
        output.writeString(4, this.valueString);
      }
      if (this.cutboard != null) {
        output.writeMessage(5, this.cutboard);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.articleType != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.articleType);
      }
      if (!this.articleTypeName.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.articleTypeName);
      }
      if (this.valueId != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(3, this.valueId);
      }
      if (!this.valueString.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.valueString);
      }
      if (this.cutboard != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(5, this.cutboard);
      }
      return size;
    }

    @Override
    public Articles mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.articleType = input.readInt32();
            break;
          }
          case 18: {
            this.articleTypeName = input.readString();
            break;
          }
          case 24: {
            this.valueId = input.readInt32();
            break;
          }
          case 34: {
            this.valueString = input.readString();
            break;
          }
          case 42: {
            if (this.cutboard == null) {
              this.cutboard = new dg.model.nano.MatrixCommon.Cutboard();
            }
            input.readMessage(this.cutboard);
            break;
          }
        }
      }
    }

    public static Articles parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Articles(), data);
    }

    public static Articles parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Articles().mergeFrom(input);
    }
  }

  public static final class StorageConfig extends
      com.google.protobuf.nano.MessageNano {

    private static volatile StorageConfig[] _emptyArray;
    public static StorageConfig[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new StorageConfig[0];
          }
        }
      }
      return _emptyArray;
    }

    // string Address = 1;
    public java.lang.String address;

    // .dg.model.DBType Type = 2;
    public int type;

    // repeated string Tags = 3;
    public java.lang.String[] tags;

    public StorageConfig() {
      clear();
    }

    public StorageConfig clear() {
      address = "";
      type = dg.model.nano.MatrixCommon.KAFKA;
      tags = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.address.equals("")) {
        output.writeString(1, this.address);
      }
      if (this.type != dg.model.nano.MatrixCommon.KAFKA) {
        output.writeInt32(2, this.type);
      }
      if (this.tags != null && this.tags.length > 0) {
        for (int i = 0; i < this.tags.length; i++) {
          java.lang.String element = this.tags[i];
          if (element != null) {
            output.writeString(3, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.address.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.address);
      }
      if (this.type != dg.model.nano.MatrixCommon.KAFKA) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(2, this.type);
      }
      if (this.tags != null && this.tags.length > 0) {
        int dataCount = 0;
        int dataSize = 0;
        for (int i = 0; i < this.tags.length; i++) {
          java.lang.String element = this.tags[i];
          if (element != null) {
            dataCount++;
            dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSizeNoTag(element);
          }
        }
        size += dataSize;
        size += 1 * dataCount;
      }
      return size;
    }

    @Override
    public StorageConfig mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.address = input.readString();
            break;
          }
          case 16: {
            int value = input.readInt32();
            switch (value) {
              case dg.model.nano.MatrixCommon.KAFKA:
              case dg.model.nano.MatrixCommon.POSTGRES:
              case dg.model.nano.MatrixCommon.FILEIMAGE:
                this.type = value;
                break;
            }
            break;
          }
          case 26: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 26);
            int i = this.tags == null ? 0 : this.tags.length;
            java.lang.String[] newArray = new java.lang.String[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.tags, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readString();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readString();
            this.tags = newArray;
            break;
          }
        }
      }
    }

    public static StorageConfig parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new StorageConfig(), data);
    }

    public static StorageConfig parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new StorageConfig().mergeFrom(input);
    }
  }
}
