// Generated by the protocol buffer compiler.  DO NOT EDIT!

package dg.model.nano;

@SuppressWarnings("hiding")
public interface Genericobj {

  // enum NonMotorVehicleGesture
  public static final int ATTITUDE_POSITIVE = 0;
  public static final int ATTITUDE_RIGHT = 1;
  public static final int ATTITUDE_LEFT = 2;
  public static final int ATTITUDE_BACK = 3;

  // enum NonMotorVehicleType
  public static final int NONMOTOR_TYPE_UNKNOWN = 0;
  public static final int NONMOTOR_TYPE_VEHICLE = 1;
  public static final int NONMOTOR_TYPE_PEDESTRIAN = 2;
  public static final int NONMOTOR_TYPE_VEHICLE2 = 3;
  public static final int NONMOTOR_TYPE_VEHICLE3 = 4;
  public static final int NONMOTOR_TYPE_ROOF = 5;
  public static final int NONMOTOR_TYPE_SEAL = 6;
  public static final int NONMOTOR_TYPE_BICYCLE = 7;

  public static final class GenericObj extends
      com.google.protobuf.nano.MessageNano {

    private static volatile GenericObj[] _emptyArray;
    public static GenericObj[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new GenericObj[0];
          }
        }
      }
      return _emptyArray;
    }

    // .dg.model.ObjType ObjType = 1;
    public int objType;

    // .dg.model.DataFmtType FmtType = 2;
    public int fmtType;

    // bytes BinData = 3;
    public byte[] binData;

    public GenericObj() {
      clear();
    }

    public GenericObj clear() {
      objType = dg.model.nano.MatrixCommon.OBJ_TYPE_UNKNOWN;
      fmtType = dg.model.nano.MatrixCommon.UNKNOWNFMT;
      binData = com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.objType != dg.model.nano.MatrixCommon.OBJ_TYPE_UNKNOWN) {
        output.writeInt32(1, this.objType);
      }
      if (this.fmtType != dg.model.nano.MatrixCommon.UNKNOWNFMT) {
        output.writeInt32(2, this.fmtType);
      }
      if (!java.util.Arrays.equals(this.binData, com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
        output.writeBytes(3, this.binData);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.objType != dg.model.nano.MatrixCommon.OBJ_TYPE_UNKNOWN) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.objType);
      }
      if (this.fmtType != dg.model.nano.MatrixCommon.UNKNOWNFMT) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(2, this.fmtType);
      }
      if (!java.util.Arrays.equals(this.binData, com.google.protobuf.nano.WireFormatNano.EMPTY_BYTES)) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBytesSize(3, this.binData);
      }
      return size;
    }

    @Override
    public GenericObj mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int value = input.readInt32();
            switch (value) {
              case dg.model.nano.MatrixCommon.OBJ_TYPE_UNKNOWN:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_CAR:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_BICYCLE:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_TRICYCLE:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_PEDESTRIAN:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_FACE:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_VEHICLE_VECTOR:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_BICYCLE_VECTOR:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_TRICYCLE_VECTOR:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_PEDESTRIAN_VECTOR:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_FACE_VECTOR:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_VEHICLE_CUTBOARD:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_BICYCLE_CUTBOARD:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_TRICYCLE_CUTBOARD:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_PEDESTRIAN_CUTBOARD:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_FACE_CUTBOARD:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_ALL:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_ALL_Matched:
                this.objType = value;
                break;
            }
            break;
          }
          case 16: {
            int value = input.readInt32();
            switch (value) {
              case dg.model.nano.MatrixCommon.UNKNOWNFMT:
              case dg.model.nano.MatrixCommon.JSON:
              case dg.model.nano.MatrixCommon.PROTOBUF:
              case dg.model.nano.MatrixCommon.CSV:
              case dg.model.nano.MatrixCommon.PDF:
                this.fmtType = value;
                break;
            }
            break;
          }
          case 26: {
            this.binData = input.readBytes();
            break;
          }
        }
      }
    }

    public static GenericObj parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new GenericObj(), data);
    }

    public static GenericObj parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new GenericObj().mergeFrom(input);
    }
  }

  public static final class GenericAllObject extends
      com.google.protobuf.nano.MessageNano {

    private static volatile GenericAllObject[] _emptyArray;
    public static GenericAllObject[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new GenericAllObject[0];
          }
        }
      }
      return _emptyArray;
    }

    // .dg.model.ObjType ObjType = 1;
    public int objType;

    // .dg.model.DataFmtType FmtType = 2;
    public int fmtType;

    // .dg.model.FaceObj Face = 3;
    public dg.model.nano.Genericobj.FaceObj face;

    // .dg.model.VehicleObj Vehicle = 4;
    public dg.model.nano.Genericobj.VehicleObj vehicle;

    // .dg.model.PedestrianObj Pedestrian = 5;
    public dg.model.nano.Genericobj.PedestrianObj pedestrian;

    // .dg.model.NonMotorVehicleObj NonMotorVehicle = 6;
    public dg.model.nano.Genericobj.NonMotorVehicleObj nonMotorVehicle;

    public GenericAllObject() {
      clear();
    }

    public GenericAllObject clear() {
      objType = dg.model.nano.MatrixCommon.OBJ_TYPE_UNKNOWN;
      fmtType = dg.model.nano.MatrixCommon.UNKNOWNFMT;
      face = null;
      vehicle = null;
      pedestrian = null;
      nonMotorVehicle = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.objType != dg.model.nano.MatrixCommon.OBJ_TYPE_UNKNOWN) {
        output.writeInt32(1, this.objType);
      }
      if (this.fmtType != dg.model.nano.MatrixCommon.UNKNOWNFMT) {
        output.writeInt32(2, this.fmtType);
      }
      if (this.face != null) {
        output.writeMessage(3, this.face);
      }
      if (this.vehicle != null) {
        output.writeMessage(4, this.vehicle);
      }
      if (this.pedestrian != null) {
        output.writeMessage(5, this.pedestrian);
      }
      if (this.nonMotorVehicle != null) {
        output.writeMessage(6, this.nonMotorVehicle);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.objType != dg.model.nano.MatrixCommon.OBJ_TYPE_UNKNOWN) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.objType);
      }
      if (this.fmtType != dg.model.nano.MatrixCommon.UNKNOWNFMT) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(2, this.fmtType);
      }
      if (this.face != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(3, this.face);
      }
      if (this.vehicle != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(4, this.vehicle);
      }
      if (this.pedestrian != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(5, this.pedestrian);
      }
      if (this.nonMotorVehicle != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(6, this.nonMotorVehicle);
      }
      return size;
    }

    @Override
    public GenericAllObject mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            int value = input.readInt32();
            switch (value) {
              case dg.model.nano.MatrixCommon.OBJ_TYPE_UNKNOWN:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_CAR:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_BICYCLE:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_TRICYCLE:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_PEDESTRIAN:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_FACE:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_VEHICLE_VECTOR:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_BICYCLE_VECTOR:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_TRICYCLE_VECTOR:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_PEDESTRIAN_VECTOR:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_FACE_VECTOR:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_VEHICLE_CUTBOARD:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_BICYCLE_CUTBOARD:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_TRICYCLE_CUTBOARD:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_PEDESTRIAN_CUTBOARD:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_FACE_CUTBOARD:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_ALL:
              case dg.model.nano.MatrixCommon.OBJ_TYPE_ALL_Matched:
                this.objType = value;
                break;
            }
            break;
          }
          case 16: {
            int value = input.readInt32();
            switch (value) {
              case dg.model.nano.MatrixCommon.UNKNOWNFMT:
              case dg.model.nano.MatrixCommon.JSON:
              case dg.model.nano.MatrixCommon.PROTOBUF:
              case dg.model.nano.MatrixCommon.CSV:
              case dg.model.nano.MatrixCommon.PDF:
                this.fmtType = value;
                break;
            }
            break;
          }
          case 26: {
            if (this.face == null) {
              this.face = new dg.model.nano.Genericobj.FaceObj();
            }
            input.readMessage(this.face);
            break;
          }
          case 34: {
            if (this.vehicle == null) {
              this.vehicle = new dg.model.nano.Genericobj.VehicleObj();
            }
            input.readMessage(this.vehicle);
            break;
          }
          case 42: {
            if (this.pedestrian == null) {
              this.pedestrian = new dg.model.nano.Genericobj.PedestrianObj();
            }
            input.readMessage(this.pedestrian);
            break;
          }
          case 50: {
            if (this.nonMotorVehicle == null) {
              this.nonMotorVehicle = new dg.model.nano.Genericobj.NonMotorVehicleObj();
            }
            input.readMessage(this.nonMotorVehicle);
            break;
          }
        }
      }
    }

    public static GenericAllObject parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new GenericAllObject(), data);
    }

    public static GenericAllObject parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new GenericAllObject().mergeFrom(input);
    }
  }

  public static final class VehicleObj extends
      com.google.protobuf.nano.MessageNano {

    private static volatile VehicleObj[] _emptyArray;
    public static VehicleObj[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new VehicleObj[0];
          }
        }
      }
      return _emptyArray;
    }

    // .dg.model.SrcMetadata Metadata = 1;
    public dg.model.nano.MatrixCommon.SrcMetadata metadata;

    // .dg.model.Image Img = 2;
    public dg.model.nano.MatrixCommon.Image img;

    // repeated .dg.model.RecVehicle Vehicle = 3;
    public dg.model.nano.MatrixCommon.RecVehicle[] vehicle;

    public VehicleObj() {
      clear();
    }

    public VehicleObj clear() {
      metadata = null;
      img = null;
      vehicle = dg.model.nano.MatrixCommon.RecVehicle.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.metadata != null) {
        output.writeMessage(1, this.metadata);
      }
      if (this.img != null) {
        output.writeMessage(2, this.img);
      }
      if (this.vehicle != null && this.vehicle.length > 0) {
        for (int i = 0; i < this.vehicle.length; i++) {
          dg.model.nano.MatrixCommon.RecVehicle element = this.vehicle[i];
          if (element != null) {
            output.writeMessage(3, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.metadata != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(1, this.metadata);
      }
      if (this.img != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(2, this.img);
      }
      if (this.vehicle != null && this.vehicle.length > 0) {
        for (int i = 0; i < this.vehicle.length; i++) {
          dg.model.nano.MatrixCommon.RecVehicle element = this.vehicle[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(3, element);
          }
        }
      }
      return size;
    }

    @Override
    public VehicleObj mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            if (this.metadata == null) {
              this.metadata = new dg.model.nano.MatrixCommon.SrcMetadata();
            }
            input.readMessage(this.metadata);
            break;
          }
          case 18: {
            if (this.img == null) {
              this.img = new dg.model.nano.MatrixCommon.Image();
            }
            input.readMessage(this.img);
            break;
          }
          case 26: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 26);
            int i = this.vehicle == null ? 0 : this.vehicle.length;
            dg.model.nano.MatrixCommon.RecVehicle[] newArray =
                new dg.model.nano.MatrixCommon.RecVehicle[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.vehicle, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new dg.model.nano.MatrixCommon.RecVehicle();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new dg.model.nano.MatrixCommon.RecVehicle();
            input.readMessage(newArray[i]);
            this.vehicle = newArray;
            break;
          }
        }
      }
    }

    public static VehicleObj parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new VehicleObj(), data);
    }

    public static VehicleObj parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new VehicleObj().mergeFrom(input);
    }
  }

  public static final class PedestrianObj extends
      com.google.protobuf.nano.MessageNano {

    private static volatile PedestrianObj[] _emptyArray;
    public static PedestrianObj[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new PedestrianObj[0];
          }
        }
      }
      return _emptyArray;
    }

    // .dg.model.SrcMetadata Metadata = 1;
    public dg.model.nano.MatrixCommon.SrcMetadata metadata;

    // .dg.model.Image Img = 2;
    public dg.model.nano.MatrixCommon.Image img;

    // repeated .dg.model.RecPedestrian Pedestrian = 3;
    public dg.model.nano.MatrixCommon.RecPedestrian[] pedestrian;

    public PedestrianObj() {
      clear();
    }

    public PedestrianObj clear() {
      metadata = null;
      img = null;
      pedestrian = dg.model.nano.MatrixCommon.RecPedestrian.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.metadata != null) {
        output.writeMessage(1, this.metadata);
      }
      if (this.img != null) {
        output.writeMessage(2, this.img);
      }
      if (this.pedestrian != null && this.pedestrian.length > 0) {
        for (int i = 0; i < this.pedestrian.length; i++) {
          dg.model.nano.MatrixCommon.RecPedestrian element = this.pedestrian[i];
          if (element != null) {
            output.writeMessage(3, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.metadata != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(1, this.metadata);
      }
      if (this.img != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(2, this.img);
      }
      if (this.pedestrian != null && this.pedestrian.length > 0) {
        for (int i = 0; i < this.pedestrian.length; i++) {
          dg.model.nano.MatrixCommon.RecPedestrian element = this.pedestrian[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(3, element);
          }
        }
      }
      return size;
    }

    @Override
    public PedestrianObj mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            if (this.metadata == null) {
              this.metadata = new dg.model.nano.MatrixCommon.SrcMetadata();
            }
            input.readMessage(this.metadata);
            break;
          }
          case 18: {
            if (this.img == null) {
              this.img = new dg.model.nano.MatrixCommon.Image();
            }
            input.readMessage(this.img);
            break;
          }
          case 26: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 26);
            int i = this.pedestrian == null ? 0 : this.pedestrian.length;
            dg.model.nano.MatrixCommon.RecPedestrian[] newArray =
                new dg.model.nano.MatrixCommon.RecPedestrian[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.pedestrian, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new dg.model.nano.MatrixCommon.RecPedestrian();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new dg.model.nano.MatrixCommon.RecPedestrian();
            input.readMessage(newArray[i]);
            this.pedestrian = newArray;
            break;
          }
        }
      }
    }

    public static PedestrianObj parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new PedestrianObj(), data);
    }

    public static PedestrianObj parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new PedestrianObj().mergeFrom(input);
    }
  }

  public static final class NonMotorVehicleObj extends
      com.google.protobuf.nano.MessageNano {

    private static volatile NonMotorVehicleObj[] _emptyArray;
    public static NonMotorVehicleObj[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new NonMotorVehicleObj[0];
          }
        }
      }
      return _emptyArray;
    }

    // .dg.model.SrcMetadata Metadata = 1;
    public dg.model.nano.MatrixCommon.SrcMetadata metadata;

    // .dg.model.Image Img = 2;
    public dg.model.nano.MatrixCommon.Image img;

    // repeated .dg.model.RecNonMotorVehicle NonMotorVehicles = 3;
    public dg.model.nano.MatrixCommon.RecNonMotorVehicle[] nonMotorVehicles;

    public NonMotorVehicleObj() {
      clear();
    }

    public NonMotorVehicleObj clear() {
      metadata = null;
      img = null;
      nonMotorVehicles = dg.model.nano.MatrixCommon.RecNonMotorVehicle.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.metadata != null) {
        output.writeMessage(1, this.metadata);
      }
      if (this.img != null) {
        output.writeMessage(2, this.img);
      }
      if (this.nonMotorVehicles != null && this.nonMotorVehicles.length > 0) {
        for (int i = 0; i < this.nonMotorVehicles.length; i++) {
          dg.model.nano.MatrixCommon.RecNonMotorVehicle element = this.nonMotorVehicles[i];
          if (element != null) {
            output.writeMessage(3, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.metadata != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(1, this.metadata);
      }
      if (this.img != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(2, this.img);
      }
      if (this.nonMotorVehicles != null && this.nonMotorVehicles.length > 0) {
        for (int i = 0; i < this.nonMotorVehicles.length; i++) {
          dg.model.nano.MatrixCommon.RecNonMotorVehicle element = this.nonMotorVehicles[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(3, element);
          }
        }
      }
      return size;
    }

    @Override
    public NonMotorVehicleObj mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            if (this.metadata == null) {
              this.metadata = new dg.model.nano.MatrixCommon.SrcMetadata();
            }
            input.readMessage(this.metadata);
            break;
          }
          case 18: {
            if (this.img == null) {
              this.img = new dg.model.nano.MatrixCommon.Image();
            }
            input.readMessage(this.img);
            break;
          }
          case 26: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 26);
            int i = this.nonMotorVehicles == null ? 0 : this.nonMotorVehicles.length;
            dg.model.nano.MatrixCommon.RecNonMotorVehicle[] newArray =
                new dg.model.nano.MatrixCommon.RecNonMotorVehicle[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.nonMotorVehicles, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new dg.model.nano.MatrixCommon.RecNonMotorVehicle();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new dg.model.nano.MatrixCommon.RecNonMotorVehicle();
            input.readMessage(newArray[i]);
            this.nonMotorVehicles = newArray;
            break;
          }
        }
      }
    }

    public static NonMotorVehicleObj parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new NonMotorVehicleObj(), data);
    }

    public static NonMotorVehicleObj parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new NonMotorVehicleObj().mergeFrom(input);
    }
  }

  public static final class FaceObj extends
      com.google.protobuf.nano.MessageNano {

    private static volatile FaceObj[] _emptyArray;
    public static FaceObj[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new FaceObj[0];
          }
        }
      }
      return _emptyArray;
    }

    // .dg.model.SrcMetadata Metadata = 1;
    public dg.model.nano.MatrixCommon.SrcMetadata metadata;

    // .dg.model.Image Img = 2;
    public dg.model.nano.MatrixCommon.Image img;

    // repeated .dg.model.RecFace Faces = 3;
    public dg.model.nano.MatrixCommon.RecFace[] faces;

    public FaceObj() {
      clear();
    }

    public FaceObj clear() {
      metadata = null;
      img = null;
      faces = dg.model.nano.MatrixCommon.RecFace.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.metadata != null) {
        output.writeMessage(1, this.metadata);
      }
      if (this.img != null) {
        output.writeMessage(2, this.img);
      }
      if (this.faces != null && this.faces.length > 0) {
        for (int i = 0; i < this.faces.length; i++) {
          dg.model.nano.MatrixCommon.RecFace element = this.faces[i];
          if (element != null) {
            output.writeMessage(3, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.metadata != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(1, this.metadata);
      }
      if (this.img != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(2, this.img);
      }
      if (this.faces != null && this.faces.length > 0) {
        for (int i = 0; i < this.faces.length; i++) {
          dg.model.nano.MatrixCommon.RecFace element = this.faces[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(3, element);
          }
        }
      }
      return size;
    }

    @Override
    public FaceObj mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            if (this.metadata == null) {
              this.metadata = new dg.model.nano.MatrixCommon.SrcMetadata();
            }
            input.readMessage(this.metadata);
            break;
          }
          case 18: {
            if (this.img == null) {
              this.img = new dg.model.nano.MatrixCommon.Image();
            }
            input.readMessage(this.img);
            break;
          }
          case 26: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 26);
            int i = this.faces == null ? 0 : this.faces.length;
            dg.model.nano.MatrixCommon.RecFace[] newArray =
                new dg.model.nano.MatrixCommon.RecFace[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.faces, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new dg.model.nano.MatrixCommon.RecFace();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new dg.model.nano.MatrixCommon.RecFace();
            input.readMessage(newArray[i]);
            this.faces = newArray;
            break;
          }
        }
      }
    }

    public static FaceObj parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new FaceObj(), data);
    }

    public static FaceObj parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new FaceObj().mergeFrom(input);
    }
  }

  public static final class RecObjs extends
      com.google.protobuf.nano.MessageNano {

    private static volatile RecObjs[] _emptyArray;
    public static RecObjs[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new RecObjs[0];
          }
        }
      }
      return _emptyArray;
    }

    // .dg.model.SrcMetadata Metadata = 1;
    public dg.model.nano.MatrixCommon.SrcMetadata metadata;

    // .dg.model.Image Img = 2;
    public dg.model.nano.MatrixCommon.Image img;

    // repeated .dg.model.RecVehicle Vehicle = 3;
    public dg.model.nano.MatrixCommon.RecVehicle[] vehicle;

    // repeated .dg.model.RecPedestrian Pedestrian = 4;
    public dg.model.nano.MatrixCommon.RecPedestrian[] pedestrian;

    // repeated .dg.model.RecNonMotorVehicle NonMotorVehicles = 5;
    public dg.model.nano.MatrixCommon.RecNonMotorVehicle[] nonMotorVehicles;

    // repeated .dg.model.RecFace RecFaces = 6;
    public dg.model.nano.MatrixCommon.RecFace[] recFaces;

    public RecObjs() {
      clear();
    }

    public RecObjs clear() {
      metadata = null;
      img = null;
      vehicle = dg.model.nano.MatrixCommon.RecVehicle.emptyArray();
      pedestrian = dg.model.nano.MatrixCommon.RecPedestrian.emptyArray();
      nonMotorVehicles = dg.model.nano.MatrixCommon.RecNonMotorVehicle.emptyArray();
      recFaces = dg.model.nano.MatrixCommon.RecFace.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.metadata != null) {
        output.writeMessage(1, this.metadata);
      }
      if (this.img != null) {
        output.writeMessage(2, this.img);
      }
      if (this.vehicle != null && this.vehicle.length > 0) {
        for (int i = 0; i < this.vehicle.length; i++) {
          dg.model.nano.MatrixCommon.RecVehicle element = this.vehicle[i];
          if (element != null) {
            output.writeMessage(3, element);
          }
        }
      }
      if (this.pedestrian != null && this.pedestrian.length > 0) {
        for (int i = 0; i < this.pedestrian.length; i++) {
          dg.model.nano.MatrixCommon.RecPedestrian element = this.pedestrian[i];
          if (element != null) {
            output.writeMessage(4, element);
          }
        }
      }
      if (this.nonMotorVehicles != null && this.nonMotorVehicles.length > 0) {
        for (int i = 0; i < this.nonMotorVehicles.length; i++) {
          dg.model.nano.MatrixCommon.RecNonMotorVehicle element = this.nonMotorVehicles[i];
          if (element != null) {
            output.writeMessage(5, element);
          }
        }
      }
      if (this.recFaces != null && this.recFaces.length > 0) {
        for (int i = 0; i < this.recFaces.length; i++) {
          dg.model.nano.MatrixCommon.RecFace element = this.recFaces[i];
          if (element != null) {
            output.writeMessage(6, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.metadata != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(1, this.metadata);
      }
      if (this.img != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(2, this.img);
      }
      if (this.vehicle != null && this.vehicle.length > 0) {
        for (int i = 0; i < this.vehicle.length; i++) {
          dg.model.nano.MatrixCommon.RecVehicle element = this.vehicle[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(3, element);
          }
        }
      }
      if (this.pedestrian != null && this.pedestrian.length > 0) {
        for (int i = 0; i < this.pedestrian.length; i++) {
          dg.model.nano.MatrixCommon.RecPedestrian element = this.pedestrian[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(4, element);
          }
        }
      }
      if (this.nonMotorVehicles != null && this.nonMotorVehicles.length > 0) {
        for (int i = 0; i < this.nonMotorVehicles.length; i++) {
          dg.model.nano.MatrixCommon.RecNonMotorVehicle element = this.nonMotorVehicles[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(5, element);
          }
        }
      }
      if (this.recFaces != null && this.recFaces.length > 0) {
        for (int i = 0; i < this.recFaces.length; i++) {
          dg.model.nano.MatrixCommon.RecFace element = this.recFaces[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(6, element);
          }
        }
      }
      return size;
    }

    @Override
    public RecObjs mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            if (this.metadata == null) {
              this.metadata = new dg.model.nano.MatrixCommon.SrcMetadata();
            }
            input.readMessage(this.metadata);
            break;
          }
          case 18: {
            if (this.img == null) {
              this.img = new dg.model.nano.MatrixCommon.Image();
            }
            input.readMessage(this.img);
            break;
          }
          case 26: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 26);
            int i = this.vehicle == null ? 0 : this.vehicle.length;
            dg.model.nano.MatrixCommon.RecVehicle[] newArray =
                new dg.model.nano.MatrixCommon.RecVehicle[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.vehicle, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new dg.model.nano.MatrixCommon.RecVehicle();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new dg.model.nano.MatrixCommon.RecVehicle();
            input.readMessage(newArray[i]);
            this.vehicle = newArray;
            break;
          }
          case 34: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 34);
            int i = this.pedestrian == null ? 0 : this.pedestrian.length;
            dg.model.nano.MatrixCommon.RecPedestrian[] newArray =
                new dg.model.nano.MatrixCommon.RecPedestrian[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.pedestrian, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new dg.model.nano.MatrixCommon.RecPedestrian();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new dg.model.nano.MatrixCommon.RecPedestrian();
            input.readMessage(newArray[i]);
            this.pedestrian = newArray;
            break;
          }
          case 42: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 42);
            int i = this.nonMotorVehicles == null ? 0 : this.nonMotorVehicles.length;
            dg.model.nano.MatrixCommon.RecNonMotorVehicle[] newArray =
                new dg.model.nano.MatrixCommon.RecNonMotorVehicle[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.nonMotorVehicles, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new dg.model.nano.MatrixCommon.RecNonMotorVehicle();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new dg.model.nano.MatrixCommon.RecNonMotorVehicle();
            input.readMessage(newArray[i]);
            this.nonMotorVehicles = newArray;
            break;
          }
          case 50: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 50);
            int i = this.recFaces == null ? 0 : this.recFaces.length;
            dg.model.nano.MatrixCommon.RecFace[] newArray =
                new dg.model.nano.MatrixCommon.RecFace[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.recFaces, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new dg.model.nano.MatrixCommon.RecFace();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new dg.model.nano.MatrixCommon.RecFace();
            input.readMessage(newArray[i]);
            this.recFaces = newArray;
            break;
          }
        }
      }
    }

    public static RecObjs parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new RecObjs(), data);
    }

    public static RecObjs parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new RecObjs().mergeFrom(input);
    }
  }
}
